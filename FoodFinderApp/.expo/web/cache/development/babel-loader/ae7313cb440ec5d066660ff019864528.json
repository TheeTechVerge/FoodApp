{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeMaps = _interopRequireWildcard(require(\"react-native-maps\"));\n\nvar _Ionicons = _interopRequireDefault(require(\"react-native-vector-icons/Ionicons\"));\n\nvar _MaterialCommunityIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialCommunityIcons\"));\n\nvar _Fontisto = _interopRequireDefault(require(\"react-native-vector-icons/Fontisto\"));\n\nvar _mapData = require(\"../model/mapData\");\n\nvar _StarRating = _interopRequireDefault(require(\"../components/StarRating\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Lab\\\\ReactNative\\\\FoodApp\\\\FoodFinderApp\\\\screens\\\\ExploreScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _Dimensions$get = _reactNative.Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar CARD_HEIGHT = 220;\nvar CARD_WIDTH = width * 0.8;\nvar SPACING_FOR_CARD_INSET = width * 0.1 - 10;\n\nvar ExploreScreen = function ExploreScreen() {\n  var theme = (0, _native.useTheme)();\n  var initialMapState = {\n    markers: _mapData.markers,\n    categories: [{\n      name: 'Fastfood Center',\n      icon: _react.default.createElement(_MaterialCommunityIcons.default, {\n        style: styles.chipsIcon,\n        name: \"food-fork-drink\",\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      })\n    }, {\n      name: 'Restaurant',\n      icon: _react.default.createElement(_Ionicons.default, {\n        name: \"ios-restaurant\",\n        style: styles.chipsIcon,\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      })\n    }, {\n      name: 'Dineouts',\n      icon: _react.default.createElement(_Ionicons.default, {\n        name: \"md-restaurant\",\n        style: styles.chipsIcon,\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      })\n    }, {\n      name: 'Snacks Corner',\n      icon: _react.default.createElement(_MaterialCommunityIcons.default, {\n        name: \"food\",\n        style: styles.chipsIcon,\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      })\n    }, {\n      name: 'Hotel',\n      icon: _react.default.createElement(_Fontisto.default, {\n        name: \"hotel\",\n        style: styles.chipsIcon,\n        size: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      })\n    }],\n    region: {\n      latitude: 22.62938671242907,\n      longitude: 88.4354486029795,\n      latitudeDelta: 0.04864195044303443,\n      longitudeDelta: 0.040142817690068\n    }\n  };\n\n  var _React$useState = _react.default.useState(initialMapState),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var mapIndex = 0;\n  var mapAnimation = new _reactNative.Animated.Value(0);\n  (0, _react.useEffect)(function () {\n    mapAnimation.addListener(function (_ref) {\n      var value = _ref.value;\n      var index = Math.floor(value / CARD_WIDTH + 0.3);\n\n      if (index >= state.markers.length) {\n        index = state.markers.length - 1;\n      }\n\n      if (index <= 0) {\n        index = 0;\n      }\n\n      clearTimeout(regionTimeout);\n      var regionTimeout = setTimeout(function () {\n        if (mapIndex !== index) {\n          mapIndex = index;\n          var coordinate = state.markers[index].coordinate;\n\n          _map.current.animateToRegion(_objectSpread(_objectSpread({}, coordinate), {}, {\n            latitudeDelta: state.region.latitudeDelta,\n            longitudeDelta: state.region.longitudeDelta\n          }), 350);\n        }\n      }, 10);\n    });\n  });\n  var interpolations = state.markers.map(function (marker, index) {\n    var inputRange = [(index - 1) * CARD_WIDTH, index * CARD_WIDTH, (index + 1) * CARD_WIDTH];\n    var scale = mapAnimation.interpolate({\n      inputRange: inputRange,\n      outputRange: [1, 1.5, 1],\n      extrapolate: \"clamp\"\n    });\n    return {\n      scale: scale\n    };\n  });\n\n  var onMarkerPress = function onMarkerPress(mapEventData) {\n    var markerID = mapEventData._targetInst.return.key;\n    var x = markerID * CARD_WIDTH + markerID * 20;\n\n    if (_reactNative.Platform.OS === 'ios') {\n      x = x - SPACING_FOR_CARD_INSET;\n    }\n\n    _scrollView.current.scrollTo({\n      x: x,\n      y: 0,\n      animated: true\n    });\n  };\n\n  var _map = _react.default.useRef(null);\n\n  var _scrollView = _react.default.useRef(null);\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeMaps.default, {\n    ref: _map,\n    initialRegion: state.region,\n    style: styles.container,\n    provider: _reactNativeMaps.PROVIDER_GOOGLE,\n    customMapStyle: theme.dark ? _mapData.mapDarkStyle : _mapData.mapStandardStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, state.markers.map(function (marker, index) {\n    var scaleStyle = {\n      transform: [{\n        scale: interpolations[index].scale\n      }]\n    };\n    return _react.default.createElement(_reactNativeMaps.default.Marker, {\n      key: index,\n      coordinate: marker.coordinate,\n      onPress: function onPress(e) {\n        return onMarkerPress(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.Animated.View, {\n      style: [styles.markerWrap],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, _react.default.createElement(_reactNative.Animated.Image, {\n      source: require('../assets/map_marker.png'),\n      style: [styles.marker, scaleStyle],\n      resizeMode: \"cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    })));\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.searchBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    placeholder: \"Search here\",\n    placeholderTextColor: \"#000\",\n    autoCapitalize: \"none\",\n    style: {\n      flex: 1,\n      padding: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_Ionicons.default, {\n    name: \"ios-search\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_reactNative.ScrollView, {\n    horizontal: true,\n    scrollEventThrottle: 1,\n    showsHorizontalScrollIndicator: false,\n    height: 50,\n    style: styles.chipsScrollView,\n    contentInset: {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 20\n    },\n    contentContainerStyle: {\n      paddingRight: _reactNative.Platform.OS === 'android' ? 20 : 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, state.categories.map(function (category, index) {\n    return _react.default.createElement(_reactNative.TouchableOpacity, {\n      key: index,\n      style: styles.chipsItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, category.icon, _react.default.createElement(_reactNative.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, category.name));\n  })), _react.default.createElement(_reactNative.Animated.ScrollView, {\n    ref: _scrollView,\n    horizontal: true,\n    pagingEnabled: true,\n    scrollEventThrottle: 1,\n    showsHorizontalScrollIndicator: false,\n    snapToInterval: CARD_WIDTH + 20,\n    snapToAlignment: \"center\",\n    style: styles.scrollView,\n    contentInset: {\n      top: 0,\n      left: SPACING_FOR_CARD_INSET,\n      bottom: 0,\n      right: SPACING_FOR_CARD_INSET\n    },\n    contentContainerStyle: {\n      paddingHorizontal: _reactNative.Platform.OS === 'android' ? SPACING_FOR_CARD_INSET : 0\n    },\n    onScroll: _reactNative.Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          x: mapAnimation\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, state.markers.map(function (marker, index) {\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.card,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.Image, {\n      source: marker.image,\n      style: styles.cardImage,\n      resizeMode: \"cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }), _react.default.createElement(_reactNative.View, {\n      style: styles.textContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      numberOfLines: 1,\n      style: styles.cardtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }, marker.title), _react.default.createElement(_StarRating.default, {\n      ratings: marker.rating,\n      reviews: marker.reviews,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }), _react.default.createElement(_reactNative.Text, {\n      numberOfLines: 1,\n      style: styles.cardDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, marker.description), _react.default.createElement(_reactNative.View, {\n      style: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, _react.default.createElement(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {},\n      style: [styles.signIn, {\n        borderColor: '#FF6347',\n        borderWidth: 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: [styles.textSign, {\n        color: '#FF6347'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }, \"Order Now\")))));\n  })));\n};\n\nvar _default = ExploreScreen;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  searchBox: {\n    position: 'absolute',\n    marginTop: _reactNative.Platform.OS === 'ios' ? 40 : 20,\n    flexDirection: \"row\",\n    backgroundColor: '#fff',\n    width: '90%',\n    alignSelf: 'center',\n    borderRadius: 5,\n    padding: 10,\n    shadowColor: '#ccc',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10\n  },\n  chipsScrollView: {\n    position: 'absolute',\n    top: _reactNative.Platform.OS === 'ios' ? 90 : 80,\n    paddingHorizontal: 10\n  },\n  chipsIcon: {\n    marginRight: 5\n  },\n  chipsItem: {\n    flexDirection: \"row\",\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    shadowColor: '#ccc',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10\n  },\n  endPadding: {\n    paddingRight: width - CARD_WIDTH\n  },\n  card: {\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5,\n    marginHorizontal: 10,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      x: 2,\n      y: -2\n    },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\"\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\"\n  },\n  textContent: {\n    flex: 2,\n    padding: 10\n  },\n  cardtitle: {\n    fontSize: 12,\n    fontWeight: \"bold\"\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\"\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 50,\n    height: 50\n  },\n  marker: {\n    width: 30,\n    height: 30\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 5\n  },\n  signIn: {\n    width: '100%',\n    padding: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3\n  },\n  textSign: {\n    fontSize: 14,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/Desktop/Lab/ReactNative/FoodApp/FoodFinderApp/screens/ExploreScreen.js"],"names":["Dimensions","get","width","height","CARD_HEIGHT","CARD_WIDTH","SPACING_FOR_CARD_INSET","ExploreScreen","theme","initialMapState","markers","categories","name","icon","styles","chipsIcon","region","latitude","longitude","latitudeDelta","longitudeDelta","React","useState","state","setState","mapIndex","mapAnimation","Animated","Value","addListener","value","index","Math","floor","length","clearTimeout","regionTimeout","setTimeout","coordinate","_map","current","animateToRegion","interpolations","map","marker","inputRange","scale","interpolate","outputRange","extrapolate","onMarkerPress","mapEventData","markerID","_targetInst","return","key","x","Platform","OS","_scrollView","scrollTo","y","animated","useRef","container","PROVIDER_GOOGLE","dark","mapDarkStyle","mapStandardStyle","scaleStyle","transform","e","markerWrap","require","searchBox","flex","padding","chipsScrollView","top","left","bottom","right","paddingRight","category","chipsItem","scrollView","paddingHorizontal","event","nativeEvent","contentOffset","useNativeDriver","card","image","cardImage","textContent","cardtitle","title","rating","reviews","cardDescription","description","button","signIn","borderColor","borderWidth","textSign","color","StyleSheet","create","position","marginTop","flexDirection","backgroundColor","alignSelf","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginRight","marginHorizontal","paddingVertical","endPadding","borderTopLeftRadius","borderTopRightRadius","overflow","fontSize","fontWeight","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  ScrollView,\n  Animated,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n  Platform,\n} from \"react-native\";\nimport MapView, {PROVIDER_GOOGLE} from \"react-native-maps\";\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Fontisto from 'react-native-vector-icons/Fontisto';\n\nimport { markers, mapDarkStyle, mapStandardStyle } from '../model/mapData';\nimport StarRating from '../components/StarRating';\n\nimport { useTheme } from '@react-navigation/native';\n\nconst { width, height } = Dimensions.get(\"window\");\nconst CARD_HEIGHT = 220;\nconst CARD_WIDTH = width * 0.8;\nconst SPACING_FOR_CARD_INSET = width * 0.1 - 10;\n\nconst ExploreScreen = () => {\n  const theme = useTheme();\n\n  const initialMapState = {\n    markers,\n    categories: [\n      { \n        name: 'Fastfood Center', \n        icon: <MaterialCommunityIcons style={styles.chipsIcon} name=\"food-fork-drink\" size={18} />,\n      },\n      {\n        name: 'Restaurant',\n        icon: <Ionicons name=\"ios-restaurant\" style={styles.chipsIcon} size={18} />,\n      },\n      {\n        name: 'Dineouts',\n        icon: <Ionicons name=\"md-restaurant\" style={styles.chipsIcon} size={18} />,\n      },\n      {\n        name: 'Snacks Corner',\n        icon: <MaterialCommunityIcons name=\"food\" style={styles.chipsIcon} size={18} />,\n      },\n      {\n        name: 'Hotel',\n        icon: <Fontisto name=\"hotel\" style={styles.chipsIcon} size={15} />,\n      },\n  ],\n    region: {\n      latitude: 22.62938671242907,\n      longitude: 88.4354486029795,\n      latitudeDelta: 0.04864195044303443,\n      longitudeDelta: 0.040142817690068,\n    },\n  };\n\n  const [state, setState] = React.useState(initialMapState);\n\n  let mapIndex = 0;\n  let mapAnimation = new Animated.Value(0);\n\n  useEffect(() => {\n    mapAnimation.addListener(({ value }) => {\n      let index = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item\n      if (index >= state.markers.length) {\n        index = state.markers.length - 1;\n      }\n      if (index <= 0) {\n        index = 0;\n      }\n\n      clearTimeout(regionTimeout);\n\n      const regionTimeout = setTimeout(() => {\n        if( mapIndex !== index ) {\n          mapIndex = index;\n          const { coordinate } = state.markers[index];\n          _map.current.animateToRegion(\n            {\n              ...coordinate,\n              latitudeDelta: state.region.latitudeDelta,\n              longitudeDelta: state.region.longitudeDelta,\n            },\n            350\n          );\n        }\n      }, 10);\n    });\n  });\n\n  const interpolations = state.markers.map((marker, index) => {\n    const inputRange = [\n      (index - 1) * CARD_WIDTH,\n      index * CARD_WIDTH,\n      ((index + 1) * CARD_WIDTH),\n    ];\n\n    const scale = mapAnimation.interpolate({\n      inputRange,\n      outputRange: [1, 1.5, 1],\n      extrapolate: \"clamp\"\n    });\n\n    return { scale };\n  });\n\n  const onMarkerPress = (mapEventData) => {\n    const markerID = mapEventData._targetInst.return.key;\n\n    let x = (markerID * CARD_WIDTH) + (markerID * 20); \n    if (Platform.OS === 'ios') {\n      x = x - SPACING_FOR_CARD_INSET;\n    }\n\n    _scrollView.current.scrollTo({x: x, y: 0, animated: true});\n  }\n\n  const _map = React.useRef(null);\n  const _scrollView = React.useRef(null);\n\n  return (\n    <View style={styles.container}>\n      <MapView\n        ref={_map}\n        initialRegion={state.region}\n        style={styles.container}\n        provider={PROVIDER_GOOGLE}\n        customMapStyle={theme.dark ? mapDarkStyle : mapStandardStyle}\n      >\n        {state.markers.map((marker, index) => {\n          const scaleStyle = {\n            transform: [\n              {\n                scale: interpolations[index].scale,\n              },\n            ],\n          };\n          return (\n            <MapView.Marker key={index} coordinate={marker.coordinate} onPress={(e)=>onMarkerPress(e)}>\n              <Animated.View style={[styles.markerWrap]}>\n                <Animated.Image\n                  source={require('../assets/map_marker.png')}\n                  style={[styles.marker, scaleStyle]}\n                  resizeMode=\"cover\"\n                />\n              </Animated.View>\n            </MapView.Marker>\n          );\n        })}\n      </MapView>\n      <View style={styles.searchBox}>\n        <TextInput \n          placeholder=\"Search here\"\n          placeholderTextColor=\"#000\"\n          autoCapitalize=\"none\"\n          style={{flex:1,padding:0}}\n        />\n        <Ionicons name=\"ios-search\" size={20} />\n      </View>\n      <ScrollView\n        horizontal\n        scrollEventThrottle={1}\n        showsHorizontalScrollIndicator={false}\n        height={50}\n        style={styles.chipsScrollView}\n        contentInset={{ // iOS only\n          top:0,\n          left:0,\n          bottom:0,\n          right:20\n        }}\n        contentContainerStyle={{\n          paddingRight: Platform.OS === 'android' ? 20 : 0\n        }}\n      >\n        {state.categories.map((category, index) => (\n          <TouchableOpacity key={index} style={styles.chipsItem}>\n            {category.icon}\n            <Text>{category.name}</Text>\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n      <Animated.ScrollView\n        ref={_scrollView}\n        horizontal\n        pagingEnabled\n        scrollEventThrottle={1}\n        showsHorizontalScrollIndicator={false}\n        snapToInterval={CARD_WIDTH + 20}\n        snapToAlignment=\"center\"\n        style={styles.scrollView}\n        contentInset={{\n          top: 0,\n          left: SPACING_FOR_CARD_INSET,\n          bottom: 0,\n          right: SPACING_FOR_CARD_INSET\n        }}\n        contentContainerStyle={{\n          paddingHorizontal: Platform.OS === 'android' ? SPACING_FOR_CARD_INSET : 0\n        }}\n        onScroll={Animated.event(\n          [\n            {\n              nativeEvent: {\n                contentOffset: {\n                  x: mapAnimation,\n                }\n              },\n            },\n          ],\n          {useNativeDriver: true}\n        )}\n      >\n        {state.markers.map((marker, index) =>(\n          <View style={styles.card} key={index}>\n            <Image \n              source={marker.image}\n              style={styles.cardImage}\n              resizeMode=\"cover\"\n            />\n            <View style={styles.textContent}>\n              <Text numberOfLines={1} style={styles.cardtitle}>{marker.title}</Text>\n              <StarRating ratings={marker.rating} reviews={marker.reviews} />\n              <Text numberOfLines={1} style={styles.cardDescription}>{marker.description}</Text>\n              <View style={styles.button}>\n                <TouchableOpacity\n                  onPress={() => {}}\n                  style={[styles.signIn, {\n                    borderColor: '#FF6347',\n                    borderWidth: 1\n                  }]}\n                >\n                  <Text style={[styles.textSign, {\n                    color: '#FF6347'\n                  }]}>Order Now</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        ))}\n      </Animated.ScrollView>\n    </View>\n  );\n};\n\nexport default ExploreScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  searchBox: {\n    position:'absolute', \n    marginTop: Platform.OS === 'ios' ? 40 : 20, \n    flexDirection:\"row\",\n    backgroundColor: '#fff',\n    width: '90%',\n    alignSelf:'center',\n    borderRadius: 5,\n    padding: 10,\n    shadowColor: '#ccc',\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10,\n  },\n  chipsScrollView: {\n    position:'absolute', \n    top:Platform.OS === 'ios' ? 90 : 80, \n    paddingHorizontal:10\n  },\n  chipsIcon: {\n    marginRight: 5,\n  },\n  chipsItem: {\n    flexDirection:\"row\",\n    backgroundColor:'#fff', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    shadowColor: '#ccc',\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10,\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10,\n  },\n  endPadding: {\n    paddingRight: width - CARD_WIDTH,\n  },\n  card: {\n    // padding: 10,\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5,\n    marginHorizontal: 10,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: { x: 2, y: -2 },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\",\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\",\n  },\n  textContent: {\n    flex: 2,\n    padding: 10,\n  },\n  cardtitle: {\n    fontSize: 12,\n    // marginTop: 5,\n    fontWeight: \"bold\",\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\",\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width:50,\n    height:50,\n  },\n  marker: {\n    width: 30,\n    height: 30,\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 5\n  },\n  signIn: {\n      width: '100%',\n      padding:5,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 3\n  },\n  textSign: {\n      fontSize: 14,\n      fontWeight: 'bold'\n  }\n});\n"]},"metadata":{},"sourceType":"script"}