{"ast":null,"code":"'use strict';\n\nif (!global.RN$Bridgeless) {\n  var BatchedBridge = require('../BatchedBridge/BatchedBridge');\n\n  BatchedBridge.registerLazyCallableModule('Systrace', function () {\n    return require('../Performance/Systrace');\n  });\n  BatchedBridge.registerLazyCallableModule('JSTimers', function () {\n    return require('./Timers/JSTimers');\n  });\n  BatchedBridge.registerLazyCallableModule('HeapCapture', function () {\n    return require('../HeapCapture/HeapCapture');\n  });\n  BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {\n    return require('../Performance/SamplingProfiler');\n  });\n  BatchedBridge.registerLazyCallableModule('RCTLog', function () {\n    return require('../Utilities/RCTLog');\n  });\n  BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {\n    return require('../EventEmitter/RCTDeviceEventEmitter');\n  });\n  BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {\n    return require('../EventEmitter/RCTNativeAppEventEmitter');\n  });\n  BatchedBridge.registerLazyCallableModule('GlobalPerformanceLogger', function () {\n    return require('../Utilities/GlobalPerformanceLogger');\n  });\n  BatchedBridge.registerLazyCallableModule('JSDevSupportModule', function () {\n    return require('../Utilities/JSDevSupportModule');\n  });\n\n  if (__DEV__ && !global.__RCTProfileIsProfiling) {\n    BatchedBridge.registerLazyCallableModule('HMRClient', function () {\n      return require('../Utilities/HMRClient');\n    });\n  } else {\n    BatchedBridge.registerLazyCallableModule('HMRClient', function () {\n      return require('../Utilities/HMRClientProdShim');\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Lab/ReactNative/FoodApp/FoodFinderApp/node_modules/react-native/Libraries/Core/setUpBatchedBridge.js"],"names":["global","RN$Bridgeless","BatchedBridge","require","registerLazyCallableModule","__DEV__","__RCTProfileIsProfiling"],"mappings":"AAUA;;AAMA,IAAI,CAACA,MAAM,CAACC,aAAZ,EAA2B;AAMzB,MAAMC,aAAa,GAAGC,OAAO,CAAC,gCAAD,CAA7B;;AACAD,EAAAA,aAAa,CAACE,0BAAd,CAAyC,UAAzC,EAAqD;AAAA,WACnDD,OAAO,CAAC,yBAAD,CAD4C;AAAA,GAArD;AAGAD,EAAAA,aAAa,CAACE,0BAAd,CAAyC,UAAzC,EAAqD;AAAA,WACnDD,OAAO,CAAC,mBAAD,CAD4C;AAAA,GAArD;AAGAD,EAAAA,aAAa,CAACE,0BAAd,CAAyC,aAAzC,EAAwD;AAAA,WACtDD,OAAO,CAAC,4BAAD,CAD+C;AAAA,GAAxD;AAGAD,EAAAA,aAAa,CAACE,0BAAd,CAAyC,kBAAzC,EAA6D;AAAA,WAC3DD,OAAO,CAAC,iCAAD,CADoD;AAAA,GAA7D;AAGAD,EAAAA,aAAa,CAACE,0BAAd,CAAyC,QAAzC,EAAmD;AAAA,WACjDD,OAAO,CAAC,qBAAD,CAD0C;AAAA,GAAnD;AAGAD,EAAAA,aAAa,CAACE,0BAAd,CAAyC,uBAAzC,EAAkE;AAAA,WAChED,OAAO,CAAC,uCAAD,CADyD;AAAA,GAAlE;AAGAD,EAAAA,aAAa,CAACE,0BAAd,CAAyC,0BAAzC,EAAqE;AAAA,WACnED,OAAO,CAAC,0CAAD,CAD4D;AAAA,GAArE;AAGAD,EAAAA,aAAa,CAACE,0BAAd,CAAyC,yBAAzC,EAAoE;AAAA,WAClED,OAAO,CAAC,sCAAD,CAD2D;AAAA,GAApE;AAGAD,EAAAA,aAAa,CAACE,0BAAd,CAAyC,oBAAzC,EAA+D;AAAA,WAC7DD,OAAO,CAAC,iCAAD,CADsD;AAAA,GAA/D;;AAIA,MAAIE,OAAO,IAAI,CAACL,MAAM,CAACM,uBAAvB,EAAgD;AAC9CJ,IAAAA,aAAa,CAACE,0BAAd,CAAyC,WAAzC,EAAsD;AAAA,aACpDD,OAAO,CAAC,wBAAD,CAD6C;AAAA,KAAtD;AAGD,GAJD,MAIO;AACLD,IAAAA,aAAa,CAACE,0BAAd,CAAyC,WAAzC,EAAsD;AAAA,aACpDD,OAAO,CAAC,gCAAD,CAD6C;AAAA,KAAtD;AAGD;AACF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\n/**\n * We don't set up the batched bridge in bridgeless mode. Once we've migrated\n * everything over to bridgeless we can just delete this file.\n */\nif (!global.RN$Bridgeless) {\n  /**\n   * Set up the BatchedBridge. This must be done after the other steps in\n   * InitializeCore to ensure that the JS environment has been initialized.\n   * You can use this module directly, or just require InitializeCore.\n   */\n  const BatchedBridge = require('../BatchedBridge/BatchedBridge');\n  BatchedBridge.registerLazyCallableModule('Systrace', () =>\n    require('../Performance/Systrace'),\n  );\n  BatchedBridge.registerLazyCallableModule('JSTimers', () =>\n    require('./Timers/JSTimers'),\n  );\n  BatchedBridge.registerLazyCallableModule('HeapCapture', () =>\n    require('../HeapCapture/HeapCapture'),\n  );\n  BatchedBridge.registerLazyCallableModule('SamplingProfiler', () =>\n    require('../Performance/SamplingProfiler'),\n  );\n  BatchedBridge.registerLazyCallableModule('RCTLog', () =>\n    require('../Utilities/RCTLog'),\n  );\n  BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', () =>\n    require('../EventEmitter/RCTDeviceEventEmitter'),\n  );\n  BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', () =>\n    require('../EventEmitter/RCTNativeAppEventEmitter'),\n  );\n  BatchedBridge.registerLazyCallableModule('GlobalPerformanceLogger', () =>\n    require('../Utilities/GlobalPerformanceLogger'),\n  );\n  BatchedBridge.registerLazyCallableModule('JSDevSupportModule', () =>\n    require('../Utilities/JSDevSupportModule'),\n  );\n\n  if (__DEV__ && !global.__RCTProfileIsProfiling) {\n    BatchedBridge.registerLazyCallableModule('HMRClient', () =>\n      require('../Utilities/HMRClient'),\n    );\n  } else {\n    BatchedBridge.registerLazyCallableModule('HMRClient', () =>\n      require('../Utilities/HMRClientProdShim'),\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}