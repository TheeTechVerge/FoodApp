{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = DrawerContentScrollView;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _DrawerPositionContext = _interopRequireDefault(require(\"../utils/DrawerPositionContext\"));\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction DrawerContentScrollView(_ref) {\n  var contentContainerStyle = _ref.contentContainerStyle,\n      style = _ref.style,\n      children = _ref.children,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"contentContainerStyle\", \"style\", \"children\"]);\n  var drawerPosition = React.useContext(_DrawerPositionContext.default);\n  var insets = (0, _reactNativeSafeAreaContext.useSafeArea)();\n  return React.createElement(_reactNative.ScrollView, _extends({}, rest, {\n    contentContainerStyle: [{\n      paddingTop: insets.top + 4,\n      paddingLeft: drawerPosition === 'left' ? insets.left : 0,\n      paddingRight: drawerPosition === 'right' ? insets.right : 0\n    }, contentContainerStyle],\n    style: [styles.container, style]\n  }), children);\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["DrawerContentScrollView.tsx"],"names":["rest","drawerPosition","React","insets","paddingTop","paddingLeft","paddingRight","styles","container","flex"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAMe,SAAA,uBAAA,OAKL;AAAA,MALsC,qBAKtC,QALsC,qBAKtC;AAAA,MALsC,KAKtC,QALsC,KAKtC;AAAA,MALsC,QAKtC,QALsC,QAKtC;AAAA,MADLA,IACK;AACR,MAAMC,cAAc,GAAGC,KAAK,CAALA,UAAAA,CAAvB,8BAAuBA,CAAvB;AACA,MAAMC,MAAM,GAAZ,8CAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,uBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,qBAAqB,EAAE,CACrB;AACEC,MAAAA,UAAU,EAAED,MAAM,CAANA,GAAAA,GADd,CAAA;AAEEE,MAAAA,WAAW,EAAEJ,cAAc,KAAdA,MAAAA,GAA4BE,MAAM,CAAlCF,IAAAA,GAFf,CAAA;AAGEK,MAAAA,YAAY,EAAEL,cAAc,KAAdA,OAAAA,GAA6BE,MAAM,CAAnCF,KAAAA,GAA4C;AAH5D,KADqB,EAFzB,qBAEyB,CAFzB;AAUE,IAAA,KAAK,EAAE,CAACM,MAAM,CAAP,SAAA,EAAA,KAAA;AAVT,GAAA,CAAA,EADF,QACE,CADF;AAgBD;;AAED,IAAMA,MAAM,GAAG,wBAAA,MAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps } from 'react-native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nexport default function DrawerContentScrollView({\n  contentContainerStyle,\n  style,\n  children,\n  ...rest\n}: Props) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeArea();\n\n  return (\n    <ScrollView\n      {...rest}\n      contentContainerStyle={[\n        {\n          paddingTop: insets.top + 4,\n          paddingLeft: drawerPosition === 'left' ? insets.left : 0,\n          paddingRight: drawerPosition === 'right' ? insets.right : 0,\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}