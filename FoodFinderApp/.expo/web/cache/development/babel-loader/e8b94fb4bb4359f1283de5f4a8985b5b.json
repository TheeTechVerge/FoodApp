{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _decorateMapComponent = _interopRequireWildcard(require(\"./decorateMapComponent\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Lab\\\\ReactNative\\\\FoodApp\\\\FoodFinderApp\\\\node_modules\\\\react-native-maps\\\\lib\\\\components\\\\MapOverlay.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar viewConfig = {\n  uiViewClassName: 'AIR<provider>MapOverlay',\n  validAttributes: {\n    image: true\n  }\n};\n\nvar propTypes = _objectSpread(_objectSpread({}, _reactNative.View.propTypes), {}, {\n  image: _propTypes.default.any.isRequired,\n  bounds: _propTypes.default.arrayOf(_propTypes.default.array.isRequired).isRequired,\n  tappable: _propTypes.default.bool,\n  onPress: _propTypes.default.func,\n  opacity: _propTypes.default.number\n});\n\nvar MapOverlay = function (_Component) {\n  (0, _inherits2.default)(MapOverlay, _Component);\n\n  var _super = _createSuper(MapOverlay);\n\n  function MapOverlay() {\n    (0, _classCallCheck2.default)(this, MapOverlay);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(MapOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var image;\n\n      if (this.props.image) {\n        if (typeof this.props.image.startsWith === 'function' && this.props.image.startsWith('http')) {\n          image = this.props.image;\n        } else {\n          image = _reactNative.Image.resolveAssetSource(this.props.image) || {};\n          image = image.uri;\n        }\n      }\n\n      var AIRMapOverlay = this.getAirComponent();\n      return _react.default.createElement(AIRMapOverlay, (0, _extends2.default)({}, this.props, {\n        image: image,\n        style: [styles.overlay, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n  return MapOverlay;\n}(_react.Component);\n\nMapOverlay.propTypes = propTypes;\nMapOverlay.viewConfig = viewConfig;\nMapOverlay.defaultProps = {\n  opacity: 1.0\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n});\n\nMapOverlay.Animated = _reactNative.Animated.createAnimatedComponent(MapOverlay);\n\nvar _default = (0, _decorateMapComponent.default)(MapOverlay, {\n  componentType: 'Overlay',\n  providers: {\n    google: {\n      ios: _decorateMapComponent.SUPPORTED,\n      android: _decorateMapComponent.USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Lab/ReactNative/FoodApp/FoodFinderApp/node_modules/react-native-maps/lib/components/MapOverlay.js"],"names":["viewConfig","uiViewClassName","validAttributes","image","propTypes","View","PropTypes","any","isRequired","bounds","arrayOf","array","tappable","bool","onPress","func","opacity","number","MapOverlay","props","startsWith","Image","resolveAssetSource","uri","AIRMapOverlay","getAirComponent","styles","overlay","style","Component","defaultProps","StyleSheet","create","position","backgroundColor","Animated","createAnimatedComponent","componentType","providers","google","ios","SUPPORTED","android","USES_DEFAULT_IMPLEMENTATION"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;AAKA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,eAAe,EAAE,yBADA;AAEjBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE;AADQ;AAFA,CAAnB;;AAOA,IAAMC,SAAS,mCACVC,kBAAKD,SADK;AAGbD,EAAAA,KAAK,EAAEG,mBAAUC,GAAV,CAAcC,UAHR;AAKbC,EAAAA,MAAM,EAAEH,mBAAUI,OAAV,CAAkBJ,mBAAUK,KAAV,CAAgBH,UAAlC,EAA8CA,UALzC;AASbI,EAAAA,QAAQ,EAAEN,mBAAUO,IATP;AAWbC,EAAAA,OAAO,EAAER,mBAAUS,IAXN;AAabC,EAAAA,OAAO,EAAEV,mBAAUW;AAbN,EAAf;;IAgBMC,U;;;;;;;;;;;;6BACK;AACP,UAAIf,KAAJ;;AACA,UAAI,KAAKgB,KAAL,CAAWhB,KAAf,EAAsB;AACpB,YACE,OAAO,KAAKgB,KAAL,CAAWhB,KAAX,CAAiBiB,UAAxB,KAAuC,UAAvC,IACA,KAAKD,KAAL,CAAWhB,KAAX,CAAiBiB,UAAjB,CAA4B,MAA5B,CAFF,EAGE;AACAjB,UAAAA,KAAK,GAAG,KAAKgB,KAAL,CAAWhB,KAAnB;AACD,SALD,MAKO;AACLA,UAAAA,KAAK,GAAGkB,mBAAMC,kBAAN,CAAyB,KAAKH,KAAL,CAAWhB,KAApC,KAA8C,EAAtD;AACAA,UAAAA,KAAK,GAAGA,KAAK,CAACoB,GAAd;AACD;AACF;;AAED,UAAMC,aAAa,GAAG,KAAKC,eAAL,EAAtB;AAEA,aACE,6BAAC,aAAD,6BACM,KAAKN,KADX;AAEE,QAAA,KAAK,EAAEhB,KAFT;AAGE,QAAA,KAAK,EAAE,CAACuB,MAAM,CAACC,OAAR,EAAiB,KAAKR,KAAL,CAAWS,KAA5B,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAOD;;;EAxBsBC,gB;;AA2BzBX,UAAU,CAACd,SAAX,GAAuBA,SAAvB;AACAc,UAAU,CAAClB,UAAX,GAAwBA,UAAxB;AACAkB,UAAU,CAACY,YAAX,GAA0B;AACxBd,EAAAA,OAAO,EAAE;AADe,CAA1B;;AAIA,IAAMU,MAAM,GAAGK,wBAAWC,MAAX,CAAkB;AAC/BL,EAAAA,OAAO,EAAE;AACPM,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,eAAe,EAAE;AAFV;AADsB,CAAlB,CAAf;;AAOAhB,UAAU,CAACiB,QAAX,GAAsBA,sBAASC,uBAAT,CAAiClB,UAAjC,CAAtB;;eAEe,mCAAqBA,UAArB,EAAiC;AAC9CmB,EAAAA,aAAa,EAAE,SAD+B;AAE9CC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEC,+BADC;AAENC,MAAAA,OAAO,EAAEC;AAFH;AADC;AAFmC,CAAjC,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet, Image, Animated } from 'react-native';\n\nimport decorateMapComponent, {\n  SUPPORTED,\n  USES_DEFAULT_IMPLEMENTATION,\n} from './decorateMapComponent';\n\nconst viewConfig = {\n  uiViewClassName: 'AIR<provider>MapOverlay',\n  validAttributes: {\n    image: true,\n  },\n};\n\nconst propTypes = {\n  ...View.propTypes,\n  // A custom image to be used as overlay.\n  image: PropTypes.any.isRequired,\n  // Top left and bottom right coordinates for the overlay\n  bounds: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n  /* Boolean to allow an overlay to be tappable and use the\n   * onPress function\n   */\n  tappable: PropTypes.bool,\n  // Callback that is called when the user presses on the overlay\n  onPress: PropTypes.func,\n  // The opacity of the overlay.\n  opacity: PropTypes.number,\n};\n\nclass MapOverlay extends Component {\n  render() {\n    let image;\n    if (this.props.image) {\n      if (\n        typeof this.props.image.startsWith === 'function' &&\n        this.props.image.startsWith('http')\n      ) {\n        image = this.props.image;\n      } else {\n        image = Image.resolveAssetSource(this.props.image) || {};\n        image = image.uri;\n      }\n    }\n\n    const AIRMapOverlay = this.getAirComponent();\n\n    return (\n      <AIRMapOverlay\n        {...this.props}\n        image={image}\n        style={[styles.overlay, this.props.style]}\n      />\n    );\n  }\n}\n\nMapOverlay.propTypes = propTypes;\nMapOverlay.viewConfig = viewConfig;\nMapOverlay.defaultProps = {\n  opacity: 1.0,\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n});\n\nMapOverlay.Animated = Animated.createAnimatedComponent(MapOverlay);\n\nexport default decorateMapComponent(MapOverlay, {\n  componentType: 'Overlay',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"script"}