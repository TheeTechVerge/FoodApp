{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _decorateMapComponent = _interopRequireWildcard(require(\"./decorateMapComponent\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Lab\\\\ReactNative\\\\FoodApp\\\\FoodFinderApp\\\\node_modules\\\\react-native-maps\\\\lib\\\\components\\\\MapMarker.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar viewConfig = {\n  uiViewClassName: 'AIR<provider>MapMarker',\n  validAttributes: {\n    coordinate: true\n  }\n};\nvar viewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;\n\nvar propTypes = _objectSpread(_objectSpread({}, viewPropTypes), {}, {\n  identifier: _propTypes.default.string,\n  reuseIdentifier: _propTypes.default.string,\n  title: _propTypes.default.string,\n  description: _propTypes.default.string,\n  testID: _propTypes.default.string,\n  image: _propTypes.default.any,\n  icon: _propTypes.default.any,\n  opacity: _propTypes.default.number,\n  pinColor: _reactNative.ColorPropType,\n  isPreselected: _propTypes.default.bool,\n  coordinate: _propTypes.default.shape({\n    latitude: _propTypes.default.number.isRequired,\n    longitude: _propTypes.default.number.isRequired\n  }).isRequired,\n  centerOffset: _propTypes.default.shape({\n    x: _propTypes.default.number.isRequired,\n    y: _propTypes.default.number.isRequired\n  }),\n  calloutOffset: _propTypes.default.shape({\n    x: _propTypes.default.number.isRequired,\n    y: _propTypes.default.number.isRequired\n  }),\n  anchor: _propTypes.default.shape({\n    x: _propTypes.default.number.isRequired,\n    y: _propTypes.default.number.isRequired\n  }),\n  calloutAnchor: _propTypes.default.shape({\n    x: _propTypes.default.number.isRequired,\n    y: _propTypes.default.number.isRequired\n  }),\n  flat: _propTypes.default.bool,\n  draggable: _propTypes.default.bool,\n  tracksViewChanges: _propTypes.default.bool,\n  tracksInfoWindowChanges: _propTypes.default.bool,\n  stopPropagation: _propTypes.default.bool,\n  onPress: _propTypes.default.func,\n  onSelect: _propTypes.default.func,\n  onDeselect: _propTypes.default.func,\n  onCalloutPress: _propTypes.default.func,\n  onDragStart: _propTypes.default.func,\n  onDrag: _propTypes.default.func,\n  onDragEnd: _propTypes.default.func\n});\n\nvar defaultProps = {\n  stopPropagation: false\n};\n\nvar MapMarker = function (_React$Component) {\n  (0, _inherits2.default)(MapMarker, _React$Component);\n\n  var _super = _createSuper(MapMarker);\n\n  function MapMarker(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MapMarker);\n    _this = _super.call(this, props);\n    _this.showCallout = _this.showCallout.bind((0, _assertThisInitialized2.default)(_this));\n    _this.hideCallout = _this.hideCallout.bind((0, _assertThisInitialized2.default)(_this));\n    _this.redrawCallout = _this.redrawCallout.bind((0, _assertThisInitialized2.default)(_this));\n    _this.animateMarkerToCoordinate = _this.animateMarkerToCoordinate.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(MapMarker, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this.marker.setNativeProps(props);\n    }\n  }, {\n    key: \"showCallout\",\n    value: function showCallout() {\n      this._runCommand('showCallout', []);\n    }\n  }, {\n    key: \"hideCallout\",\n    value: function hideCallout() {\n      this._runCommand('hideCallout', []);\n    }\n  }, {\n    key: \"redrawCallout\",\n    value: function redrawCallout() {\n      this._runCommand('redrawCallout', []);\n    }\n  }, {\n    key: \"animateMarkerToCoordinate\",\n    value: function animateMarkerToCoordinate(coordinate, duration) {\n      this._runCommand('animateMarkerToCoordinate', [coordinate, duration || 500]);\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      this._runCommand('redraw', []);\n    }\n  }, {\n    key: \"_getHandle\",\n    value: function _getHandle() {\n      return (0, _reactNative.findNodeHandle)(this.marker);\n    }\n  }, {\n    key: \"_runCommand\",\n    value: function _runCommand(name, args) {\n      switch (_reactNative.Platform.OS) {\n        case 'android':\n          _reactNative.NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(), this.getUIManagerCommand(name), args);\n\n          break;\n\n        case 'ios':\n          this.getMapManagerCommand(name).apply(void 0, [this._getHandle()].concat((0, _toConsumableArray2.default)(args)));\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var image;\n\n      if (this.props.image) {\n        image = _reactNative.Image.resolveAssetSource(this.props.image) || {};\n        image = image.uri || this.props.image;\n      }\n\n      var icon;\n\n      if (this.props.icon) {\n        icon = _reactNative.Image.resolveAssetSource(this.props.icon) || {};\n        icon = icon.uri;\n      }\n\n      var AIRMapMarker = this.getAirComponent();\n      return _react.default.createElement(AIRMapMarker, (0, _extends2.default)({\n        ref: function ref(_ref) {\n          _this2.marker = _ref;\n        }\n      }, this.props, {\n        image: image,\n        icon: icon,\n        style: [styles.marker, this.props.style],\n        onPress: function onPress(event) {\n          if (_this2.props.stopPropagation) {\n            event.stopPropagation();\n          }\n\n          if (_this2.props.onPress) {\n            _this2.props.onPress(event);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n  return MapMarker;\n}(_react.default.Component);\n\nMapMarker.propTypes = propTypes;\nMapMarker.defaultProps = defaultProps;\nMapMarker.viewConfig = viewConfig;\n\nvar styles = _reactNative.StyleSheet.create({\n  marker: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n});\n\nMapMarker.Animated = _reactNative.Animated.createAnimatedComponent(MapMarker);\n\nvar _default = (0, _decorateMapComponent.default)(MapMarker, {\n  componentType: 'Marker',\n  providers: {\n    google: {\n      ios: _decorateMapComponent.SUPPORTED,\n      android: _decorateMapComponent.USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Lab/ReactNative/FoodApp/FoodFinderApp/node_modules/react-native-maps/lib/components/MapMarker.js"],"names":["viewConfig","uiViewClassName","validAttributes","coordinate","viewPropTypes","ViewPropTypes","View","propTypes","identifier","PropTypes","string","reuseIdentifier","title","description","testID","image","any","icon","opacity","number","pinColor","ColorPropType","isPreselected","bool","shape","latitude","isRequired","longitude","centerOffset","x","y","calloutOffset","anchor","calloutAnchor","flat","draggable","tracksViewChanges","tracksInfoWindowChanges","stopPropagation","onPress","func","onSelect","onDeselect","onCalloutPress","onDragStart","onDrag","onDragEnd","defaultProps","MapMarker","props","showCallout","bind","hideCallout","redrawCallout","animateMarkerToCoordinate","marker","setNativeProps","_runCommand","duration","name","args","Platform","OS","NativeModules","UIManager","dispatchViewManagerCommand","_getHandle","getUIManagerCommand","getMapManagerCommand","Image","resolveAssetSource","uri","AIRMapMarker","getAirComponent","ref","styles","style","event","React","Component","StyleSheet","create","position","backgroundColor","Animated","createAnimatedComponent","componentType","providers","google","ios","SUPPORTED","android","USES_DEFAULT_IMPLEMENTATION"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ColorPropType,\n  StyleSheet,\n  Platform,\n  NativeModules,\n  Animated,\n  Image,\n  findNodeHandle,\n  ViewPropTypes,\n  View,\n} from 'react-native';\n\nimport decorateMapComponent, {\n  SUPPORTED,\n  USES_DEFAULT_IMPLEMENTATION,\n} from './decorateMapComponent';\n\nconst viewConfig = {\n  uiViewClassName: 'AIR<provider>MapMarker',\n  validAttributes: {\n    coordinate: true,\n  },\n};\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  // TODO(lmr): get rid of these?\n  identifier: PropTypes.string,\n  reuseIdentifier: PropTypes.string,\n\n  /**\n   * The title of the marker. This is only used if the <Marker /> component has no children that\n   * are a `<Callout />`, in which case the default callout behavior will be used, which\n   * will show both the `title` and the `description`, if provided.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The description of the marker. This is only used if the <Marker /> component has no children\n   * that are a `<Callout />`, in which case the default callout behavior will be used,\n   * which will show both the `title` and the `description`, if provided.\n   */\n  description: PropTypes.string,\n\n  /**\n   * Test ID for end to end test automation\n   */\n  testID: PropTypes.string,\n\n  /**\n   * A custom image to be used as the marker's icon. Only local image resources are allowed to be\n   * used.\n   */\n  image: PropTypes.any,\n\n  /**\n   * Marker icon to render (equivalent to `icon` property of GMSMarker Class).\n   * Using this property has an advantage over `image` in term of performance, battery usage...\n   * because it doesn't trigger tracksViewChanges.\n   * (tracksViewChanges is set to YES by default if iconView is not nil).\n   */\n  icon: PropTypes.any,\n\n  /**\n   * Opacity level of view/image based markers\n   */\n  opacity: PropTypes.number,\n\n  /**\n   * If no custom marker view or custom image is provided, the platform default pin will be used,\n   * which can be customized by this color. Ignored if a custom marker is being used.\n   */\n  pinColor: ColorPropType,\n\n  /**\n   * When true, the marker will be pre-selected. Setting this to true allows the user to\n   * drag the marker without needing to tap on it once to focus on it.\n   */\n  isPreselected: PropTypes.bool,\n\n  /**\n   * The coordinate for the marker.\n   */\n  coordinate: PropTypes.shape({\n    /**\n     * Coordinates for the anchor point of the marker.\n     */\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n  }).isRequired,\n\n  /**\n   * The offset (in points) at which to display the view.\n   *\n   * By default, the center point of an annotation view is placed at the coordinate point of the\n   * associated annotation. You can use this property to reposition the annotation view as\n   * needed. This x and y offset values are measured in points. Positive offset values move the\n   * annotation view down and to the right, while negative values move it up and to the left.\n   *\n   * For android, see the `anchor` prop.\n   *\n   * @platform ios\n   */\n  centerOffset: PropTypes.shape({\n    /**\n     * Offset from the anchor point\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * The offset (in points) at which to place the callout bubble.\n   *\n   * This property determines the additional distance by which to move the callout bubble. When\n   * this property is set to (0, 0), the anchor point of the callout bubble is placed on the\n   * top-center point of the marker view’s frame. Specifying positive offset values moves the\n   * callout bubble down and to the right, while specifying negative values moves it up and to\n   * the left.\n   *\n   * For android, see the `calloutAnchor` prop.\n   *\n   * @platform ios\n   */\n  calloutOffset: PropTypes.shape({\n    /**\n     * Offset to the callout\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * Sets the anchor point for the marker.\n   *\n   * The anchor specifies the point in the icon image that is anchored to the marker's position\n   * on the Earth's surface.\n   *\n   * The anchor point is specified in the continuous space [0.0, 1.0] x [0.0, 1.0], where (0, 0)\n   * is the top-left corner of the image, and (1, 1) is the bottom-right corner. The anchoring\n   * point in a W x H image is the nearest discrete grid point in a (W + 1) x (H + 1) grid,\n   * obtained by scaling the then rounding. For example, in a 4 x 2 image, the anchor point\n   * (0.7, 0.6) resolves to the grid point at (3, 1).\n   *\n   * For ios, see the `centerOffset` prop.\n   *\n   * @platform android\n   */\n  anchor: PropTypes.shape({\n    /**\n     * Offset to the callout\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * Specifies the point in the marker image at which to anchor the callout when it is displayed.\n   * This is specified in the same coordinate system as the anchor. See the `andor` prop for more\n   * details.\n   *\n   * The default is the top middle of the image.\n   *\n   * For ios, see the `calloutOffset` prop.\n   *\n   * @platform android\n   */\n  calloutAnchor: PropTypes.shape({\n    /**\n     * Offset to the callout\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * Sets whether this marker should be flat against the map true or a billboard facing the\n   * camera false.\n   *\n   * @platform android\n   */\n  flat: PropTypes.bool,\n\n  draggable: PropTypes.bool,\n\n  /**\n   * Sets whether this marker should track view changes true.\n   */\n\n  tracksViewChanges: PropTypes.bool,\n\n  /**\n   * Sets whether this marker should track view changes in info window true.\n   *\n   * @platform ios\n   */\n\n  tracksInfoWindowChanges: PropTypes.bool,\n\n  /**\n   * Stops Marker onPress events from propagating to and triggering MapView onPress events.\n   *\n   * @platform ios\n   */\n\n  stopPropagation: PropTypes.bool,\n\n  /**\n   * Callback that is called when the user presses on the marker\n   */\n  onPress: PropTypes.func,\n\n  /**\n   * Callback that is called when the user selects the marker, before the callout is shown.\n   *\n   * @platform ios\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Callback that is called when the marker is deselected, before the callout is hidden.\n   *\n   * @platform ios\n   */\n  onDeselect: PropTypes.func,\n\n  /**\n   * Callback that is called when the user taps the callout view.\n   */\n  onCalloutPress: PropTypes.func,\n\n  /**\n   * Callback that is called when the user initiates a drag on this marker (if it is draggable)\n   */\n  onDragStart: PropTypes.func,\n\n  /**\n   * Callback called continuously as the marker is dragged\n   */\n  onDrag: PropTypes.func,\n\n  /**\n   * Callback that is called when a drag on this marker finishes. This is usually the point you\n   * will want to setState on the marker's coordinate again\n   */\n  onDragEnd: PropTypes.func,\n};\n\nconst defaultProps = {\n  stopPropagation: false,\n};\n\nclass MapMarker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showCallout = this.showCallout.bind(this);\n    this.hideCallout = this.hideCallout.bind(this);\n    this.redrawCallout = this.redrawCallout.bind(this);\n    this.animateMarkerToCoordinate = this.animateMarkerToCoordinate.bind(this);\n  }\n\n  setNativeProps(props) {\n    this.marker.setNativeProps(props);\n  }\n\n  showCallout() {\n    this._runCommand('showCallout', []);\n  }\n\n  hideCallout() {\n    this._runCommand('hideCallout', []);\n  }\n\n  redrawCallout() {\n    this._runCommand('redrawCallout', []);\n  }\n\n  animateMarkerToCoordinate(coordinate, duration) {\n    this._runCommand('animateMarkerToCoordinate', [\n      coordinate,\n      duration || 500,\n    ]);\n  }\n\n  redraw() {\n    this._runCommand('redraw', []);\n  }\n\n  _getHandle() {\n    return findNodeHandle(this.marker);\n  }\n\n  _runCommand(name, args) {\n    switch (Platform.OS) {\n      case 'android':\n        NativeModules.UIManager.dispatchViewManagerCommand(\n          this._getHandle(),\n          this.getUIManagerCommand(name),\n          args\n        );\n        break;\n\n      case 'ios':\n        this.getMapManagerCommand(name)(this._getHandle(), ...args);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    let image;\n    if (this.props.image) {\n      image = Image.resolveAssetSource(this.props.image) || {};\n      image = image.uri || this.props.image;\n    }\n\n    let icon;\n    if (this.props.icon) {\n      icon = Image.resolveAssetSource(this.props.icon) || {};\n      icon = icon.uri;\n    }\n\n    const AIRMapMarker = this.getAirComponent();\n\n    return (\n      <AIRMapMarker\n        ref={ref => {\n          this.marker = ref;\n        }}\n        {...this.props}\n        image={image}\n        icon={icon}\n        style={[styles.marker, this.props.style]}\n        onPress={event => {\n          if (this.props.stopPropagation) {\n            event.stopPropagation();\n          }\n          if (this.props.onPress) {\n            this.props.onPress(event);\n          }\n        }}\n      />\n    );\n  }\n}\n\nMapMarker.propTypes = propTypes;\nMapMarker.defaultProps = defaultProps;\nMapMarker.viewConfig = viewConfig;\n\nconst styles = StyleSheet.create({\n  marker: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n});\n\nMapMarker.Animated = Animated.createAnimatedComponent(MapMarker);\n\nexport default decorateMapComponent(MapMarker, {\n  componentType: 'Marker',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"script"}