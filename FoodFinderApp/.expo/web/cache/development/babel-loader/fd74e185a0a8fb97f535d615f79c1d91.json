{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Lab\\\\ReactNative\\\\FoodApp\\\\FoodFinderApp\\\\node_modules\\\\react-native-image-header-scroll-view\\\\src\\\\ImageHeaderScrollView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ImageHeaderScrollView = function (_Component) {\n  (0, _inherits2.default)(ImageHeaderScrollView, _Component);\n\n  var _super = _createSuper(ImageHeaderScrollView);\n\n  function ImageHeaderScrollView(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ImageHeaderScrollView);\n    _this = _super.call(this, props);\n\n    _this.onContainerLayout = function () {\n      if (!_this.container) {\n        return;\n      }\n\n      _this.container.measureInWindow(function (x, y) {\n        if (_this.container) {\n          _this.setState(function () {\n            return {\n              pageY: y\n            };\n          });\n        }\n      });\n    };\n\n    _this.onScroll = function (e) {\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n\n      var scrollY = e.nativeEvent.contentOffset.y;\n\n      _this.state.scrollY.setValue(scrollY);\n    };\n\n    _this.state = {\n      scrollY: new _reactNative.Animated.Value(0),\n      pageY: 0\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ImageHeaderScrollView, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        scrollY: this.state.scrollY,\n        scrollPageY: this.state.pageY + this.props.minHeight\n      };\n    }\n  }, {\n    key: \"interpolateOnImageHeight\",\n    value: function interpolateOnImageHeight(outputRange) {\n      var headerScrollDistance = this.props.maxHeight - this.props.minHeight;\n      return this.state.scrollY.interpolate({\n        inputRange: [0, headerScrollDistance],\n        outputRange: outputRange,\n        extrapolate: 'clamp'\n      });\n    }\n  }, {\n    key: \"renderHeaderProps\",\n    value: function renderHeaderProps() {\n      if (this.props.headerImage) {\n        return _react.default.createElement(_reactNative.Image, {\n          source: this.props.headerImage,\n          style: {\n            height: this.props.maxHeight,\n            width: _reactNative.Dimensions.get('window').width\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return this.props.renderHeader();\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var overlayOpacity = this.interpolateOnImageHeight([this.props.minOverlayOpacity, this.props.maxOverlayOpacity]);\n      var headerScale = this.state.scrollY.interpolate({\n        inputRange: [-this.props.maxHeight, 0],\n        outputRange: [3, 1],\n        extrapolate: 'clamp'\n      });\n      var headerTransformStyle = {\n        height: this.props.maxHeight,\n        transform: !this.props.disableHeaderGrow ? [{\n          scale: headerScale\n        }] : undefined\n      };\n      var overlayStyle = [styles.overlay, {\n        opacity: overlayOpacity,\n        backgroundColor: this.props.overlayColor\n      }];\n      var disableOverlay = this.props.minOverlayOpacity === this.props.maxOverlayOpacity && this.props.maxOverlayOpacity === 0;\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.header, headerTransformStyle, this.props.headerContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }\n      }, this.renderHeaderProps(), !disableOverlay && _react.default.createElement(_reactNative.Animated.View, {\n        style: overlayStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: [styles.fixedForeground, this.props.fixedForegroundContainerStyles],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }, this.props.renderFixedForeground()));\n    }\n  }, {\n    key: \"renderForeground\",\n    value: function renderForeground() {\n      var headerTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, this.props.maxHeight * 2],\n        outputRange: [0, -this.props.maxHeight * 2 * this.props.foregroundParallaxRatio],\n        extrapolate: this.props.foregroundExtrapolate\n      });\n      var headerTransformStyle = {\n        height: this.props.maxHeight,\n        transform: [{\n          translateY: headerTranslate\n        }]\n      };\n\n      if (!this.props.renderForeground) {\n        return _react.default.createElement(_reactNative.View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.header, headerTransformStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }\n      }, this.props.renderForeground());\n    }\n  }, {\n    key: \"renderTouchableFixedForeground\",\n    value: function renderTouchableFixedForeground() {\n      var height = this.interpolateOnImageHeight([this.props.maxHeight, this.props.minHeight]);\n\n      if (!this.props.renderTouchableFixedForeground) {\n        return _react.default.createElement(_reactNative.View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (this.props.useNativeDriver) {\n        if (__DEV__) {\n          console.warn('useNativeDriver=true and renderTouchableFixedForeground is not supported at the moment due to the animation of height unsupported with the native driver');\n        }\n\n        return null;\n      }\n\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.header, styles.touchableFixedForeground, {\n          height: height\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }\n      }, this.props.renderTouchableFixedForeground());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          childrenStyle = _this$props.childrenStyle,\n          overlayColor = _this$props.overlayColor,\n          fadeOutForeground = _this$props.fadeOutForeground,\n          foregroundParallaxRatio = _this$props.foregroundParallaxRatio,\n          maxHeight = _this$props.maxHeight,\n          maxOverlayOpacity = _this$props.maxOverlayOpacity,\n          minHeight = _this$props.minHeight,\n          minOverlayOpacity = _this$props.minOverlayOpacity,\n          renderFixedForeground = _this$props.renderFixedForeground,\n          renderForeground = _this$props.renderForeground,\n          renderHeader = _this$props.renderHeader,\n          renderTouchableFixedForeground = _this$props.renderTouchableFixedForeground,\n          style = _this$props.style,\n          contentContainerStyle = _this$props.contentContainerStyle,\n          onScroll = _this$props.onScroll,\n          scrollViewBackgroundColor = _this$props.scrollViewBackgroundColor,\n          useNativeDriver = _this$props.useNativeDriver,\n          scrollViewProps = (0, _objectWithoutProperties2.default)(_this$props, [\"childrenStyle\", \"overlayColor\", \"fadeOutForeground\", \"foregroundParallaxRatio\", \"maxHeight\", \"maxOverlayOpacity\", \"minHeight\", \"minOverlayOpacity\", \"renderFixedForeground\", \"renderForeground\", \"renderHeader\", \"renderTouchableFixedForeground\", \"style\", \"contentContainerStyle\", \"onScroll\", \"scrollViewBackgroundColor\", \"useNativeDriver\"]);\n      var ScrollViewComponent = useNativeDriver ? _reactNative.Animated.ScrollView : this.props.ScrollViewComponent;\n      var inset = maxHeight - minHeight;\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.container, {\n          paddingTop: minHeight,\n          backgroundColor: scrollViewBackgroundColor\n        }],\n        ref: function ref(_ref2) {\n          _this2.container = _ref2;\n        },\n        onLayout: this.onContainerLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 7\n        }\n      }, this.renderHeader(), _react.default.createElement(ScrollViewComponent, (0, _extends2.default)({\n        scrollEventThrottle: useNativeDriver ? 1 : 16,\n        ref: function ref(_ref) {\n          _this2.scrollViewRef = _ref;\n        },\n        overScrollMode: \"never\"\n      }, scrollViewProps, {\n        contentContainerStyle: [{\n          backgroundColor: scrollViewBackgroundColor,\n          marginTop: inset,\n          paddingBottom: inset\n        }, contentContainerStyle, childrenStyle],\n        style: [styles.container, style],\n        onScroll: useNativeDriver ? _reactNative.Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }) : this.onScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      })), this.renderTouchableFixedForeground(), this.renderForeground());\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      var responder = this.getScrollResponder();\n\n      if (!responder) {\n        return;\n      }\n\n      return responder.getScrollableNode();\n    }\n  }, {\n    key: \"getInnerViewNode\",\n    value: function getInnerViewNode() {\n      var responder = this.getScrollResponder();\n\n      if (!responder) {\n        return;\n      }\n\n      return responder.getInnerViewNode();\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(y, x, animated) {\n      var responder = this.getScrollResponder();\n\n      if (!responder) {\n        return;\n      }\n\n      responder.scrollTo(y, x, animated);\n    }\n  }, {\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      if (this.scrollViewRef && this.scrollViewRef.scrollToEnd && typeof this.scrollViewRef.scrollToEnd === 'function') {\n        this.scrollViewRef.scrollToEnd(params);\n      }\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this.scrollViewRef && this.scrollViewRef.getScrollResponder) {\n        return this.scrollViewRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this.scrollViewRef && this.scrollViewRef.setNativeProps) {\n        this.scrollViewRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      if (this.scrollViewRef && this.scrollViewRef.recordInteraction) {\n        this.scrollViewRef.recordInteraction();\n      }\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this.scrollViewRef && this.scrollViewRef.flashScrollIndicators) {\n        this.scrollViewRef.flashScrollIndicators();\n      }\n    }\n  }, {\n    key: \"getMetrics\",\n    value: function getMetrics() {\n      if (this.scrollViewRef && this.scrollViewRef.getMetrics && typeof this.scrollViewRef.getMetrics === 'function') {\n        return this.scrollViewRef.getMetrics();\n      }\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      if (this.scrollViewRef && this.scrollViewRef.scrollToIndex && typeof this.scrollViewRef.scrollToIndex === 'function') {\n        this.scrollViewRef.scrollToIndex(params);\n      }\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      if (this.scrollViewRef && this.scrollViewRef.scrollToItem && typeof this.scrollViewRef.scrollToItem === 'function') {\n        this.scrollViewRef.scrollToItem(params);\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      if (this.scrollViewRef && this.scrollViewRef.scrollToOffset && typeof this.scrollViewRef.scrollToOffset === 'function') {\n        this.scrollViewRef.scrollToOffset(params);\n      }\n    }\n  }, {\n    key: \"scrollToLocation\",\n    value: function scrollToLocation(params) {\n      if (this.scrollViewRef && this.scrollViewRef.scrollToLocation && typeof this.scrollViewRef.scrollToLocation === 'function') {\n        this.scrollViewRef.scrollToLocation(params);\n      }\n    }\n  }]);\n  return ImageHeaderScrollView;\n}(_react.Component);\n\nImageHeaderScrollView.defaultProps = {\n  overlayColor: 'black',\n  disableHeaderGrow: false,\n  fadeOutForeground: false,\n  foregroundParallaxRatio: 1,\n  maxHeight: 125,\n  maxOverlayOpacity: 0.3,\n  minHeight: 80,\n  minOverlayOpacity: 0,\n  renderFixedForeground: function renderFixedForeground() {\n    return _react.default.createElement(_reactNative.View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 34\n      }\n    });\n  },\n  foregroundExtrapolate: 'clamp',\n  renderHeader: function renderHeader() {\n    return _react.default.createElement(_reactNative.View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    });\n  },\n  ScrollViewComponent: _reactNative.ScrollView,\n  scrollViewBackgroundColor: 'white'\n};\nImageHeaderScrollView.childContextTypes = {\n  scrollY: _propTypes.default.instanceOf(_reactNative.Animated.Value),\n  scrollPageY: _propTypes.default.number\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden'\n  },\n  headerChildren: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: 100\n  },\n  fixedForeground: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: 101\n  },\n  touchableFixedForeground: {\n    zIndex: 102\n  }\n});\n\nvar _default = ImageHeaderScrollView;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Lab/ReactNative/FoodApp/FoodFinderApp/node_modules/react-native-image-header-scroll-view/src/ImageHeaderScrollView.js"],"names":["ImageHeaderScrollView","props","onContainerLayout","container","measureInWindow","x","y","setState","pageY","onScroll","e","scrollY","nativeEvent","contentOffset","state","setValue","Animated","Value","scrollPageY","minHeight","outputRange","headerScrollDistance","maxHeight","interpolate","inputRange","extrapolate","headerImage","height","width","Dimensions","get","renderHeader","overlayOpacity","interpolateOnImageHeight","minOverlayOpacity","maxOverlayOpacity","headerScale","headerTransformStyle","transform","disableHeaderGrow","scale","undefined","overlayStyle","styles","overlay","opacity","backgroundColor","overlayColor","disableOverlay","header","headerContainerStyle","renderHeaderProps","fixedForeground","fixedForegroundContainerStyles","renderFixedForeground","headerTranslate","foregroundParallaxRatio","foregroundExtrapolate","translateY","renderForeground","renderTouchableFixedForeground","useNativeDriver","__DEV__","console","warn","touchableFixedForeground","childrenStyle","fadeOutForeground","style","contentContainerStyle","scrollViewBackgroundColor","scrollViewProps","ScrollViewComponent","ScrollView","inset","paddingTop","ref","scrollViewRef","marginTop","paddingBottom","event","responder","getScrollResponder","getScrollableNode","getInnerViewNode","animated","scrollTo","params","scrollToEnd","setNativeProps","recordInteraction","flashScrollIndicators","getMetrics","scrollToIndex","scrollToItem","scrollToOffset","scrollToLocation","Component","defaultProps","childContextTypes","PropTypes","instanceOf","number","StyleSheet","create","flex","position","top","left","right","overflow","headerChildren","justifyContent","bottom","zIndex"],"mappings":"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","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, ScrollView, StyleSheet, View, Image, Dimensions } from 'react-native';\nimport type { ViewProps } from 'ViewPropTypes';\nimport type { FlatList, SectionList, ListView } from 'react-native';\n\ntype ScrollViewProps = {\n  onScroll?: ?Function,\n  style?: $PropertyType<ViewProps, 'style'>,\n  contentContainerStyle?: $PropertyType<ViewProps, 'style'>,\n  scrollEventThrottle?: number,\n};\n\ntype SourceObjectProps = {\n  uri?: ?string,\n  bundle?: ?string,\n  method?: ?string,\n  headers?: ?{ [string]: string },\n  body?: ?string,\n  cache?: ?('default' | 'reload' | 'force-cache' | 'only-if-cached'),\n  width?: ?number,\n  height?: ?number,\n  scale?: ?number,\n};\ntype SourceProps = number | SourceObjectProps | SourceObjectProps[];\n\nexport type Props = ScrollViewProps & {\n  children?: ?React$Element<any>,\n  childrenStyle?: ?any,\n  overlayColor: string,\n  fadeOutForeground: boolean,\n  foregroundParallaxRatio: number,\n  maxHeight: number,\n  maxOverlayOpacity: number,\n  minHeight: number,\n  minOverlayOpacity: number,\n  renderFixedForeground: () => React$Element<any>,\n  renderForeground?: () => React$Element<any>,\n  renderHeader: () => React$Element<any>,\n  foregroundExtrapolate: ?string,\n  renderTouchableFixedForeground?: ?() => React$Element<any>,\n  ScrollViewComponent: React$ComponentType<ScrollViewProps>,\n  scrollViewBackgroundColor: string,\n  headerImage?: ?SourceProps,\n  useNativeDriver: ?boolean,\n  headerContainerStyle?: ?Object,\n  fixedForegroundContainerStyles?: ?Object,\n  disableHeaderGrow?: ?boolean,\n};\n\nexport type DefaultProps = {\n  overlayColor: string,\n  fadeOutForeground: boolean,\n  foregroundParallaxRatio: number,\n  maxHeight: number,\n  maxOverlayOpacity: number,\n  minHeight: number,\n  minOverlayOpacity: number,\n  renderFixedForeground: () => React$Element<any>,\n  renderHeader: () => React$Element<any>,\n  foregroundExtrapolate: string,\n  ScrollViewComponent: React$ComponentType<ScrollViewProps>,\n  scrollViewBackgroundColor: string,\n};\n\nexport type State = {\n  scrollY: Animated.Value,\n  pageY: number,\n};\n\ntype ScrollComponent<ItemT> = FlatList<ItemT> | SectionList<ItemT> | ListView | ScrollView;\n\nclass ImageHeaderScrollView extends Component<Props, State> {\n  container: ?View; // @see https://github.com/facebook/react-native/issues/15955\n  scrollViewRef: ?ScrollComponent<any>; // @see https://github.com/facebook/react-native/issues/15955\n  state: State;\n\n  static defaultProps: DefaultProps = {\n    overlayColor: 'black',\n    disableHeaderGrow: false,\n    fadeOutForeground: false,\n    foregroundParallaxRatio: 1,\n    maxHeight: 125,\n    maxOverlayOpacity: 0.3,\n    minHeight: 80,\n    minOverlayOpacity: 0,\n    renderFixedForeground: () => <View />,\n    foregroundExtrapolate: 'clamp',\n    renderHeader: () => <View />,\n    ScrollViewComponent: ScrollView,\n    scrollViewBackgroundColor: 'white',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      scrollY: new Animated.Value(0),\n      pageY: 0,\n    };\n  }\n\n  getChildContext() {\n    return {\n      scrollY: this.state.scrollY,\n      scrollPageY: this.state.pageY + this.props.minHeight,\n    };\n  }\n\n  interpolateOnImageHeight(outputRange: Array<number>) {\n    const headerScrollDistance = this.props.maxHeight - this.props.minHeight;\n    return this.state.scrollY.interpolate({\n      inputRange: [0, headerScrollDistance],\n      outputRange,\n      extrapolate: 'clamp',\n    });\n  }\n\n  renderHeaderProps() {\n    if (this.props.headerImage) {\n      return (\n        <Image\n          source={this.props.headerImage}\n          style={{\n            height: this.props.maxHeight,\n            width: Dimensions.get('window').width,\n          }}\n        />\n      );\n    }\n    return this.props.renderHeader();\n  }\n\n  renderHeader() {\n    const overlayOpacity = this.interpolateOnImageHeight([\n      this.props.minOverlayOpacity,\n      this.props.maxOverlayOpacity,\n    ]);\n\n    const headerScale = this.state.scrollY.interpolate({\n      inputRange: [-this.props.maxHeight, 0],\n      outputRange: [3, 1],\n      extrapolate: 'clamp',\n    });\n\n    const headerTransformStyle = {\n      height: this.props.maxHeight,\n      transform: !this.props.disableHeaderGrow ? [{ scale: headerScale }] : undefined,\n    };\n\n    const overlayStyle = [\n      styles.overlay,\n      { opacity: overlayOpacity, backgroundColor: this.props.overlayColor },\n    ];\n\n    const disableOverlay =\n      this.props.minOverlayOpacity === this.props.maxOverlayOpacity &&\n      this.props.maxOverlayOpacity === 0;\n\n    return (\n      <Animated.View style={[styles.header, headerTransformStyle, this.props.headerContainerStyle]}>\n        {this.renderHeaderProps()}\n        {!disableOverlay && <Animated.View style={overlayStyle} />}\n        <View style={[styles.fixedForeground, this.props.fixedForegroundContainerStyles]}>\n          {this.props.renderFixedForeground()}\n        </View>\n      </Animated.View>\n    );\n  }\n\n  renderForeground() {\n    const headerTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, this.props.maxHeight * 2],\n      outputRange: [0, -this.props.maxHeight * 2 * this.props.foregroundParallaxRatio],\n      extrapolate: this.props.foregroundExtrapolate,\n    });\n\n    const headerTransformStyle = {\n      height: this.props.maxHeight,\n      transform: [{ translateY: headerTranslate }],\n    };\n\n    if (!this.props.renderForeground) {\n      return <View />;\n    }\n\n    return (\n      <Animated.View style={[styles.header, headerTransformStyle]}>\n        {this.props.renderForeground()}\n      </Animated.View>\n    );\n  }\n\n  renderTouchableFixedForeground() {\n    const height = this.interpolateOnImageHeight([this.props.maxHeight, this.props.minHeight]);\n\n    if (!this.props.renderTouchableFixedForeground) {\n      return <View />;\n    }\n\n    if (this.props.useNativeDriver) {\n      if (__DEV__) {\n        console.warn(\n          'useNativeDriver=true and renderTouchableFixedForeground is not supported at the moment due to the animation of height unsupported with the native driver'\n        );\n      }\n      return null;\n    }\n\n    return (\n      <Animated.View style={[styles.header, styles.touchableFixedForeground, { height }]}>\n        {this.props.renderTouchableFixedForeground()}\n      </Animated.View>\n    );\n  }\n\n  onContainerLayout = () => {\n    if (!this.container) {\n      return;\n    }\n    this.container.measureInWindow((x, y) => {\n      if (this.container) {\n        this.setState(() => ({ pageY: y }));\n      }\n    });\n  };\n\n  onScroll = (e: *) => {\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const scrollY = e.nativeEvent.contentOffset.y;\n    this.state.scrollY.setValue(scrollY);\n  };\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      childrenStyle,\n      overlayColor,\n      fadeOutForeground,\n      foregroundParallaxRatio,\n      maxHeight,\n      maxOverlayOpacity,\n      minHeight,\n      minOverlayOpacity,\n      renderFixedForeground,\n      renderForeground,\n      renderHeader,\n      renderTouchableFixedForeground,\n      style,\n      contentContainerStyle,\n      onScroll,\n      scrollViewBackgroundColor,\n      useNativeDriver,\n      ...scrollViewProps\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    const ScrollViewComponent = useNativeDriver\n      ? Animated.ScrollView\n      : this.props.ScrollViewComponent;\n\n    const inset = maxHeight - minHeight;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          {\n            paddingTop: minHeight,\n            backgroundColor: scrollViewBackgroundColor,\n          },\n        ]}\n        ref={ref => {\n          this.container = ref;\n        }}\n        onLayout={this.onContainerLayout}\n      >\n        {this.renderHeader()}\n        <ScrollViewComponent\n          scrollEventThrottle={useNativeDriver ? 1 : 16}\n          ref={ref => {\n            this.scrollViewRef = ref;\n          }}\n          overScrollMode=\"never\"\n          {...scrollViewProps}\n          contentContainerStyle={[\n            {\n              backgroundColor: scrollViewBackgroundColor,\n              marginTop: inset,\n              paddingBottom: inset,\n            },\n            contentContainerStyle,\n            childrenStyle,\n          ]}\n          style={[styles.container, style]}\n          onScroll={\n            useNativeDriver\n              ? Animated.event([{ nativeEvent: { contentOffset: { y: this.state.scrollY } } }], {\n                  useNativeDriver: true,\n                })\n              : this.onScroll\n          }\n        />\n        {this.renderTouchableFixedForeground()}\n        {this.renderForeground()}\n      </View>\n    );\n  }\n\n  /*\n   * Expose `ScrollView` API so this component is composable\n   * with any component that expects a `ScrollView`.\n   */\n  getScrollableNode(): any {\n    const responder = this.getScrollResponder();\n    if (!responder) {\n      return;\n    }\n    return responder.getScrollableNode();\n  }\n\n  getInnerViewNode(): any {\n    const responder = this.getScrollResponder();\n    if (!responder) {\n      return;\n    }\n    return responder.getInnerViewNode();\n  }\n\n  scrollTo(\n    y?: number | { x?: number, y?: number, animated?: boolean },\n    x?: number,\n    animated?: boolean\n  ) {\n    const responder = this.getScrollResponder();\n    if (!responder) {\n      return;\n    }\n    responder.scrollTo(y, x, animated);\n  }\n\n  scrollToEnd(params?: ?{ animated?: ?boolean }) {\n    if (\n      this.scrollViewRef &&\n      this.scrollViewRef.scrollToEnd &&\n      typeof this.scrollViewRef.scrollToEnd === 'function'\n    ) {\n      this.scrollViewRef.scrollToEnd(params);\n    }\n  }\n\n  getScrollResponder(): ?ScrollView {\n    if (this.scrollViewRef && this.scrollViewRef.getScrollResponder) {\n      return this.scrollViewRef.getScrollResponder();\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this.scrollViewRef && this.scrollViewRef.setNativeProps) {\n      this.scrollViewRef.setNativeProps(props);\n    }\n  }\n\n  recordInteraction() {\n    if (this.scrollViewRef && this.scrollViewRef.recordInteraction) {\n      this.scrollViewRef.recordInteraction();\n    }\n  }\n\n  flashScrollIndicators() {\n    if (this.scrollViewRef && this.scrollViewRef.flashScrollIndicators) {\n      this.scrollViewRef.flashScrollIndicators();\n    }\n  }\n\n  getMetrics(): ?Object {\n    if (\n      this.scrollViewRef &&\n      this.scrollViewRef.getMetrics &&\n      typeof this.scrollViewRef.getMetrics === 'function'\n    ) {\n      return this.scrollViewRef.getMetrics();\n    }\n  }\n\n  /**\n   * Expose `FlatList` API so this component is composable\n   * with any component that expects a `FlatList`.\n   */\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    if (\n      this.scrollViewRef &&\n      this.scrollViewRef.scrollToIndex &&\n      typeof this.scrollViewRef.scrollToIndex === 'function'\n    ) {\n      this.scrollViewRef.scrollToIndex(params);\n    }\n  }\n\n  scrollToItem(params: { animated?: ?boolean, item: any, viewPosition?: number }) {\n    if (\n      this.scrollViewRef &&\n      this.scrollViewRef.scrollToItem &&\n      typeof this.scrollViewRef.scrollToItem === 'function'\n    ) {\n      this.scrollViewRef.scrollToItem(params);\n    }\n  }\n\n  scrollToOffset(params: { animated?: ?boolean, offset: number }) {\n    if (\n      this.scrollViewRef &&\n      this.scrollViewRef.scrollToOffset &&\n      typeof this.scrollViewRef.scrollToOffset === 'function'\n    ) {\n      this.scrollViewRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Expose `SectionList` API so this component is composable\n   * with any component that expects a `SectionList`.\n   */\n  scrollToLocation(params: {\n    animated?: ?boolean,\n    itemIndex: number,\n    sectionIndex: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    if (\n      this.scrollViewRef &&\n      this.scrollViewRef.scrollToLocation &&\n      typeof this.scrollViewRef.scrollToLocation === 'function'\n    ) {\n      this.scrollViewRef.scrollToLocation(params);\n    }\n  }\n}\n\nImageHeaderScrollView.childContextTypes = {\n  scrollY: PropTypes.instanceOf(Animated.Value),\n  scrollPageY: PropTypes.number,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n  },\n  headerChildren: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: 100,\n  },\n  fixedForeground: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: 101,\n  },\n  touchableFixedForeground: {\n    zIndex: 102,\n  },\n});\n\nexport default ImageHeaderScrollView;\n"]},"metadata":{},"sourceType":"script"}