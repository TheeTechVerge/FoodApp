{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _DrawerContent = require(\"./screens/DrawerContent\");\n\nvar _MainTabScreen = _interopRequireDefault(require(\"./screens/MainTabScreen\"));\n\nvar _SupportScreen = _interopRequireDefault(require(\"./screens/SupportScreen\"));\n\nvar _SettingsScreen = _interopRequireDefault(require(\"./screens/SettingsScreen\"));\n\nvar _BookmarkScreen = _interopRequireDefault(require(\"./screens/BookmarkScreen\"));\n\nvar _context4 = require(\"./components/context\");\n\nvar _RootStackScreen = _interopRequireDefault(require(\"./screens/RootStackScreen\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Lab\\\\ReactNative\\\\FoodApp\\\\FoodFinderApp\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Drawer = (0, _drawer.createDrawerNavigator)();\n\nvar App = function App() {\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isDarkTheme = _React$useState2[0],\n      setIsDarkTheme = _React$useState2[1];\n\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var CustomDefaultTheme = _objectSpread(_objectSpread(_objectSpread({}, _native.DefaultTheme), _reactNativePaper.DefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread(_objectSpread({}, _native.DefaultTheme.colors), _reactNativePaper.DefaultTheme.colors), {}, {\n      background: '#ffffff',\n      text: '#333333'\n    })\n  });\n\n  var CustomDarkTheme = _objectSpread(_objectSpread(_objectSpread({}, _native.DarkTheme), _reactNativePaper.DarkTheme), {}, {\n    colors: _objectSpread(_objectSpread(_objectSpread({}, _native.DarkTheme.colors), _reactNativePaper.DarkTheme.colors), {}, {\n      background: '#333333',\n      text: '#ffffff'\n    })\n  });\n\n  var theme = isDarkTheme ? CustomDarkTheme : CustomDefaultTheme;\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = _react.default.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = _react.default.useMemo(function () {\n    return {\n      signIn: function signIn(foundUser) {\n        var userToken, userName;\n        return _regenerator.default.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userToken = String(foundUser[0].userToken);\n                userName = foundUser[0].username;\n                _context.prev = 2;\n                _context.next = 5;\n                return _regenerator.default.awrap(_asyncStorage.default.setItem('userToken', userToken));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n                dispatch({\n                  type: 'LOGIN',\n                  id: userName,\n                  token: userToken\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      },\n      signOut: function signOut() {\n        return _regenerator.default.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regenerator.default.awrap(_asyncStorage.default.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {},\n      toggleTheme: function toggleTheme() {\n        setIsDarkTheme(function (isDarkTheme) {\n          return !isDarkTheme;\n        });\n      }\n    };\n  }, []);\n\n  (0, _react.useEffect)(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regenerator.default.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userToken = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regenerator.default.awrap(_asyncStorage.default.getItem('userToken'));\n\n            case 4:\n              userToken = _context3.sent;\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 10:\n              dispatch({\n                type: 'RETRIEVE_TOKEN',\n                token: userToken\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.ActivityIndicator, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return _react.default.createElement(_reactNativePaper.Provider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_context4.AuthContext.Provider, {\n    value: authContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_native.NavigationContainer, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, loginState.userToken !== null ? _react.default.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return _react.default.createElement(_DrawerContent.DrawerContent, (0, _extends2.default)({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 51\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Drawer.Screen, {\n    name: \"HomeDrawer\",\n    component: _MainTabScreen.default,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"SupportScreen\",\n    component: _SupportScreen.default,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"SettingsScreen\",\n    component: _SettingsScreen.default,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"BookmarkScreen\",\n    component: _BookmarkScreen.default,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  })) : _react.default.createElement(_RootStackScreen.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }))));\n};\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Lab/ReactNative/FoodApp/FoodFinderApp/App.js"],"names":["Drawer","App","React","useState","isDarkTheme","setIsDarkTheme","initialLoginState","isLoading","userName","userToken","CustomDefaultTheme","NavigationDefaultTheme","PaperDefaultTheme","colors","background","text","CustomDarkTheme","NavigationDarkTheme","PaperDarkTheme","theme","loginReducer","prevState","action","type","token","id","useReducer","loginState","dispatch","authContext","useMemo","signIn","foundUser","String","username","AsyncStorage","setItem","console","log","signOut","removeItem","signUp","toggleTheme","setTimeout","getItem","flex","justifyContent","alignItems","props","MainTabScreen","SupportScreen","SettingsScreen","BookmarkScreen"],"mappings":"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","sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow\n */\n\nimport React, { useEffect } from 'react';\nimport { View, ActivityIndicator } from 'react-native';\nimport { \n  NavigationContainer, \n  DefaultTheme as NavigationDefaultTheme,\n  DarkTheme as NavigationDarkTheme\n} from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport { \n  Provider as PaperProvider, \n  DefaultTheme as PaperDefaultTheme,\n  DarkTheme as PaperDarkTheme \n} from 'react-native-paper';\n\nimport { DrawerContent } from './screens/DrawerContent';\n\nimport MainTabScreen from './screens/MainTabScreen';\nimport SupportScreen from './screens/SupportScreen';\nimport SettingsScreen from './screens/SettingsScreen';\nimport BookmarkScreen from './screens/BookmarkScreen';\n\nimport { AuthContext } from './components/context';\n\nimport RootStackScreen from './screens/RootStackScreen';\n\nimport AsyncStorage from '@react-native-community/async-storage';\n\nconst Drawer = createDrawerNavigator();\n\nconst App = () => {\n  // const [isLoading, setIsLoading] = React.useState(true);\n  // const [userToken, setUserToken] = React.useState(null); \n\n  const [isDarkTheme, setIsDarkTheme] = React.useState(false);\n\n  const initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null,\n  };\n\n  const CustomDefaultTheme = {\n    ...NavigationDefaultTheme,\n    ...PaperDefaultTheme,\n    colors: {\n      ...NavigationDefaultTheme.colors,\n      ...PaperDefaultTheme.colors,\n      background: '#ffffff',\n      text: '#333333'\n    }\n  }\n  \n  const CustomDarkTheme = {\n    ...NavigationDarkTheme,\n    ...PaperDarkTheme,\n    colors: {\n      ...NavigationDarkTheme.colors,\n      ...PaperDarkTheme.colors,\n      background: '#333333',\n      text: '#ffffff'\n    }\n  }\n\n  const theme = isDarkTheme ? CustomDarkTheme : CustomDefaultTheme;\n\n  const loginReducer = (prevState, action) => {\n    switch( action.type ) {\n      case 'RETRIEVE_TOKEN': \n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN': \n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT': \n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isLoading: false,\n        };\n      case 'REGISTER': \n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n  const authContext = React.useMemo(() => ({\n    signIn: async(foundUser) => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n      const userToken = String(foundUser[0].userToken);\n      const userName = foundUser[0].username;\n      \n      try {\n        await AsyncStorage.setItem('userToken', userToken);\n      } catch(e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'LOGIN', id: userName, token: userToken });\n    },\n    signOut: async() => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n    },\n    toggleTheme: () => {\n      setIsDarkTheme( isDarkTheme => !isDarkTheme );\n    }\n  }), []);\n\n  useEffect(() => {\n    setTimeout(async() => {\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'RETRIEVE_TOKEN', token: userToken });\n    }, 1000);\n  }, []);\n\n  if( loginState.isLoading ) {\n    return(\n      <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n        <ActivityIndicator size=\"large\"/>\n      </View>\n    );\n  }\n  return (\n    <PaperProvider theme={theme}>\n    <AuthContext.Provider value={authContext}>\n    <NavigationContainer theme={theme}>\n      { loginState.userToken !== null ? (\n        <Drawer.Navigator drawerContent={props => <DrawerContent {...props} />}>\n          <Drawer.Screen name=\"HomeDrawer\" component={MainTabScreen} />\n          <Drawer.Screen name=\"SupportScreen\" component={SupportScreen} />\n          <Drawer.Screen name=\"SettingsScreen\" component={SettingsScreen} />\n          <Drawer.Screen name=\"BookmarkScreen\" component={BookmarkScreen} />\n        </Drawer.Navigator>\n      )\n    :\n      <RootStackScreen/>\n    }\n    </NavigationContainer>\n    </AuthContext.Provider>\n    </PaperProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"script"}