{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _CheckboxIOS = _interopRequireDefault(require(\"./CheckboxIOS\"));\n\nvar _CheckboxAndroid = _interopRequireDefault(require(\"./CheckboxAndroid\"));\n\nvar _CheckboxItem = _interopRequireDefault(require(\"./CheckboxItem\"));\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Checkbox = function (_React$Component) {\n  (0, _inherits2.default)(Checkbox, _React$Component);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox() {\n    (0, _classCallCheck2.default)(this, Checkbox);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      return _reactNative.Platform.OS === 'ios' ? React.createElement(_CheckboxIOS.default, this.props) : React.createElement(_CheckboxAndroid.default, this.props);\n    }\n  }]);\n  return Checkbox;\n}(React.Component);\n\n_defineProperty(Checkbox, \"Item\", _CheckboxItem.default);\n\n_defineProperty(Checkbox, \"Android\", _CheckboxAndroid.default);\n\n_defineProperty(Checkbox, \"IOS\", _CheckboxIOS.default);\n\nvar _default = (0, _theming.withTheme)(Checkbox);\n\nexports.default = _default;","map":{"version":3,"sources":["Checkbox.tsx"],"names":["Checkbox","React","CheckboxItem","CheckboxAndroid","CheckboxIOS","Platform","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAIA;;AACA;;;;;;;;;;;;;;;;;;;;;IAyEA,Q;;;;;;;;;;;;6BAUW;AACP,aAAOK,sBAAAA,EAAAA,KAAAA,KAAAA,GACL,KAAA,CAAA,aAAA,CAAA,oBAAA,EAAiB,KADZA,KACL,CADKA,GAGL,KAAA,CAAA,aAAA,CAAA,wBAAA,EAAqB,KAHvB,KAGE,CAHF;AAKD;;;EAhBoBJ,KAAK,CAA5B,S;;gBAAMD,Q,UAEUE,qB;;gBAFVF,Q,aAKaG,wB;;gBALbH,Q,SAQSI,oB;;eAWAE,wBAAf,QAAeA,C","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CheckboxIOS, { CheckboxIOS as _CheckboxIOS } from './CheckboxIOS';\nimport CheckboxAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  CheckboxAndroid as _CheckboxAndroid,\n} from './CheckboxAndroid';\nimport CheckboxItem from './CheckboxItem';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxItem.tsx\n  static Item = CheckboxItem;\n\n  // @component ./CheckboxAndroid.tsx\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.tsx\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"script"}