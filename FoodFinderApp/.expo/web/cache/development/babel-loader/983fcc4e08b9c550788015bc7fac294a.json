{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\n\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple\"));\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DrawerItem = function (_React$Component) {\n  (0, _inherits2.default)(DrawerItem, _React$Component);\n\n  var _super = _createSuper(DrawerItem);\n\n  function DrawerItem() {\n    (0, _classCallCheck2.default)(this, DrawerItem);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(DrawerItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          label = _this$props.label,\n          active = _this$props.active,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          onPress = _this$props.onPress,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          rest = _objectWithoutProperties(_this$props, [\"icon\", \"label\", \"active\", \"theme\", \"style\", \"onPress\", \"accessibilityLabel\"]);\n\n      var colors = theme.colors,\n          roundness = theme.roundness;\n      var backgroundColor = active ? (0, _color.default)(colors.primary).alpha(0.12).rgb().string() : 'transparent';\n      var contentColor = active ? colors.primary : (0, _color.default)(colors.text).alpha(0.68).rgb().string();\n      var font = theme.fonts.medium;\n      var labelMargin = icon ? 32 : 0;\n      return React.createElement(_reactNative.View, _extends({}, rest, {\n        style: [styles.container, {\n          backgroundColor: backgroundColor,\n          borderRadius: roundness\n        }, style]\n      }), React.createElement(_TouchableRipple.default, {\n        borderless: true,\n        delayPressIn: 0,\n        onPress: onPress,\n        style: {\n          borderRadius: roundness\n        },\n        accessibilityTraits: active ? ['button', 'selected'] : 'button',\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        accessibilityStates: active ? ['selected'] : [],\n        accessibilityLabel: accessibilityLabel\n      }, React.createElement(_reactNative.View, {\n        style: styles.wrapper\n      }, icon ? React.createElement(_Icon.default, {\n        source: icon,\n        size: 24,\n        color: contentColor\n      }) : null, React.createElement(_Text.default, {\n        numberOfLines: 1,\n        style: [styles.label, _objectSpread(_objectSpread({\n          color: contentColor\n        }, font), {}, {\n          marginLeft: labelMargin\n        })]\n      }, label))));\n    }\n  }]);\n  return DrawerItem;\n}(React.Component);\n\n_defineProperty(DrawerItem, \"displayName\", 'Drawer.Item');\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  label: {\n    marginRight: 32\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DrawerItem);\n\nexports.default = _default;","map":{"version":3,"sources":["DrawerItem.tsx"],"names":["DrawerItem","React","accessibilityLabel","roundness","backgroundColor","active","color","colors","contentColor","font","theme","labelMargin","icon","styles","borderRadius","wrapper","marginLeft","container","marginHorizontal","marginVertical","flexDirection","alignItems","padding","label","marginRight","withTheme"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass DrawerItem extends React.Component<Props> {\n  static displayName = 'Drawer.Item';\n\n  render() {\n    const {\n      icon,\n      label,\n      active,\n      theme,\n      style,\n      onPress,\n      accessibilityLabel,\n      ...rest\n    } = this.props;\n    const { colors, roundness } = theme;\n    const backgroundColor = active\n      ? color(colors.primary)\n          .alpha(0.12)\n          .rgb()\n          .string()\n      : 'transparent';\n    const contentColor = active\n      ? colors.primary\n      : color(colors.text)\n          .alpha(0.68)\n          .rgb()\n          .string();\n    const font = theme.fonts.medium;\n    const labelMargin = icon ? 32 : 0;\n\n    return (\n      <View\n        {...rest}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius: roundness },\n          style,\n        ]}\n      >\n        <TouchableRipple\n          borderless\n          delayPressIn={0}\n          onPress={onPress}\n          style={{ borderRadius: roundness }}\n          accessibilityTraits={active ? ['button', 'selected'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityStates={active ? ['selected'] : []}\n          accessibilityLabel={accessibilityLabel}\n        >\n          <View style={styles.wrapper}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  ...font,\n                  marginLeft: labelMargin,\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n        </TouchableRipple>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default withTheme(DrawerItem);\n"]},"metadata":{},"sourceType":"script"}