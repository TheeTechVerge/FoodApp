{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeMaps = _interopRequireWildcard(require(\"react-native-maps\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Lab\\\\ReactNative\\\\FoodApp\\\\FoodFinderApp\\\\screens\\\\MapTestScreen.js\";\nvar mapDarkStyle = [{\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#212121\"\n  }]\n}, {\n  \"elementType\": \"labels.icon\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#757575\"\n  }]\n}, {\n  \"elementType\": \"labels.text.stroke\",\n  \"stylers\": [{\n    \"color\": \"#212121\"\n  }]\n}, {\n  \"featureType\": \"administrative\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#757575\"\n  }]\n}, {\n  \"featureType\": \"administrative.country\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#9e9e9e\"\n  }]\n}, {\n  \"featureType\": \"administrative.land_parcel\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"administrative.locality\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#bdbdbd\"\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#757575\"\n  }]\n}, {\n  \"featureType\": \"poi.park\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#181818\"\n  }]\n}, {\n  \"featureType\": \"poi.park\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#616161\"\n  }]\n}, {\n  \"featureType\": \"poi.park\",\n  \"elementType\": \"labels.text.stroke\",\n  \"stylers\": [{\n    \"color\": \"#1b1b1b\"\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#2c2c2c\"\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#8a8a8a\"\n  }]\n}, {\n  \"featureType\": \"road.arterial\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#373737\"\n  }]\n}, {\n  \"featureType\": \"road.highway\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#3c3c3c\"\n  }]\n}, {\n  \"featureType\": \"road.highway.controlled_access\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#4e4e4e\"\n  }]\n}, {\n  \"featureType\": \"road.local\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#616161\"\n  }]\n}, {\n  \"featureType\": \"transit\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#757575\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"geometry\",\n  \"stylers\": [{\n    \"color\": \"#000000\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#3d3d3d\"\n  }]\n}];\nvar mapStandardStyle = [{\n  \"elementType\": \"labels.icon\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}];\n\nvar MapTestScreen = function MapTestScreen() {\n  var theme = (0, _native.useTheme)();\n  return _react.default.createElement(_reactNativeMaps.default, {\n    provider: _reactNativeMaps.PROVIDER_GOOGLE,\n    style: styles.map,\n    customMapStyle: theme.dark ? mapDarkStyle : mapStandardStyle,\n    region: {\n      latitude: 37.78825,\n      longitude: -122.4324,\n      latitudeDelta: 0.015,\n      longitudeDelta: 0.0121\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeMaps.Marker, {\n    coordinate: {\n      latitude: 37.78825,\n      longitude: -122.4324\n    },\n    image: require('../assets/map_marker.png'),\n    title: \"Test Title\",\n    description: \"This is the test description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNativeMaps.Callout, {\n    tooltip: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.bubble,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, \"Favourite Restaurant\"), _react.default.createElement(_reactNative.Image, {\n    style: styles.image,\n    source: require('../assets/banners/food-banner1.jpg'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.arrowBorder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.arrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  })))));\n};\n\nvar _default = MapTestScreen;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  map: {\n    height: '100%'\n  },\n  bubble: {\n    flexDirection: 'column',\n    alignSelf: 'flex-start',\n    backgroundColor: '#fff',\n    borderRadius: 6,\n    borderColor: '#ccc',\n    borderWidth: 0.5,\n    padding: 15,\n    width: 150\n  },\n  arrow: {\n    backgroundColor: 'transparent',\n    borderColor: 'transparent',\n    borderTopColor: '#fff',\n    borderWidth: 16,\n    alignSelf: 'center',\n    marginTop: -32\n  },\n  arrowBorder: {\n    backgroundColor: 'transparent',\n    borderColor: 'transparent',\n    borderTopColor: '#007a87',\n    borderWidth: 16,\n    alignSelf: 'center',\n    marginTop: -0.5\n  },\n  name: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  image: {\n    width: \"100%\",\n    height: 80\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/Desktop/Lab/ReactNative/FoodApp/FoodFinderApp/screens/MapTestScreen.js"],"names":["mapDarkStyle","mapStandardStyle","MapTestScreen","theme","PROVIDER_GOOGLE","styles","map","dark","latitude","longitude","latitudeDelta","longitudeDelta","require","bubble","name","image","arrowBorder","arrow","StyleSheet","create","height","flexDirection","alignSelf","backgroundColor","borderRadius","borderColor","borderWidth","padding","width","borderTopColor","marginTop","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MapView, { PROVIDER_GOOGLE, Marker, Callout } from 'react-native-maps';\nimport { View, Text, Image, StyleSheet } from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n\nconst mapDarkStyle = [\n  {\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#212121\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.icon\",\n    \"stylers\": [\n      {\n        \"visibility\": \"off\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#757575\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#212121\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#757575\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative.country\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#9e9e9e\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative.land_parcel\",\n    \"stylers\": [\n      {\n        \"visibility\": \"off\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative.locality\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#bdbdbd\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#757575\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#181818\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#616161\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#1b1b1b\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#2c2c2c\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#8a8a8a\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.arterial\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#373737\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#3c3c3c\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway.controlled_access\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#4e4e4e\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.local\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#616161\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#757575\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#000000\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#3d3d3d\"\n      }\n    ]\n  }\n];\n\nconst mapStandardStyle = [\n  {\n    \"elementType\": \"labels.icon\",\n    \"stylers\": [\n      {\n        \"visibility\": \"off\"\n      }\n    ]\n  },\n];\n\nconst MapTestScreen = () => {\n  const theme = useTheme();\n\n    return (\n        <MapView\n          provider={PROVIDER_GOOGLE} // remove if not using Google Maps\n          style={styles.map}\n          customMapStyle={ theme.dark ? mapDarkStyle : mapStandardStyle}\n          region={{\n            latitude: 37.78825,\n            longitude: -122.4324,\n            latitudeDelta: 0.015,\n            longitudeDelta: 0.0121,\n          }}\n        >\n          <Marker \n            coordinate={{\n              latitude: 37.78825,\n              longitude: -122.4324,\n            }}\n            image={require('../assets/map_marker.png')}\n            title=\"Test Title\"\n            description=\"This is the test description\"\n          >\n            <Callout tooltip>\n              <View>\n                <View style={styles.bubble}>\n                  <Text style={styles.name}>Favourite Restaurant</Text>\n                  {/* <Text>A short description</Text> */}\n                  <Image \n                    style={styles.image}\n                    source={require('../assets/banners/food-banner1.jpg')}\n                  />\n                </View>\n                <View style={styles.arrowBorder} />\n                <View style={styles.arrow} />\n              </View>\n            </Callout>\n          </Marker>\n        </MapView>\n    );\n};\n\nexport default MapTestScreen;\n\nconst styles = StyleSheet.create({\n  map: {\n    height: '100%'\n  },\n  // Callout bubble\n  bubble: {\n    flexDirection: 'column',\n    alignSelf: 'flex-start',\n    backgroundColor: '#fff',\n    borderRadius: 6,\n    borderColor: '#ccc',\n    borderWidth: 0.5,\n    padding: 15,\n    width: 150,\n  },\n  // Arrow below the bubble\n  arrow: {\n    backgroundColor: 'transparent',\n    borderColor: 'transparent',\n    borderTopColor: '#fff',\n    borderWidth: 16,\n    alignSelf: 'center',\n    marginTop: -32,\n  },\n  arrowBorder: {\n    backgroundColor: 'transparent',\n    borderColor: 'transparent',\n    borderTopColor: '#007a87',\n    borderWidth: 16,\n    alignSelf: 'center',\n    marginTop: -0.5,\n    // marginBottom: -15\n  },\n  // Character name\n  name: {\n    fontSize: 16,\n    marginBottom: 5,\n  },\n  // Character image\n  image: {\n    width: \"100%\",\n    height: 80,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}