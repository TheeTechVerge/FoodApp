{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _DrawerView = _interopRequireDefault(require(\"../views/DrawerView\"));\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction DrawerNavigator(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n      openByDefault = _ref.openByDefault,\n      backBehavior = _ref.backBehavior,\n      children = _ref.children,\n      screenOptions = _ref.screenOptions,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"initialRouteName\", \"openByDefault\", \"backBehavior\", \"children\", \"screenOptions\"]);\n\n  var _useNavigationBuilder = (0, _native.useNavigationBuilder)(_native.DrawerRouter, {\n    initialRouteName: initialRouteName,\n    openByDefault: openByDefault,\n    backBehavior: backBehavior,\n    children: children,\n    screenOptions: screenOptions\n  }),\n      state = _useNavigationBuilder.state,\n      descriptors = _useNavigationBuilder.descriptors,\n      navigation = _useNavigationBuilder.navigation;\n\n  return React.createElement(_DrawerView.default, _extends({}, rest, {\n    state: state,\n    descriptors: descriptors,\n    navigation: navigation\n  }));\n}\n\nvar _default = (0, _native.createNavigatorFactory)(DrawerNavigator);\n\nexports.default = _default;","map":{"version":3,"sources":["createDrawerNavigator.tsx"],"names":["rest","navigation","useNavigationBuilder","initialRouteName","openByDefault","backBehavior","children","screenOptions","createNavigatorFactory"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAWA;;;;;;;;;;;;;;;;;;;;AAWA,SAAA,eAAA,OAOU;AAAA,MAPe,gBAOf,QAPe,gBAOf;AAAA,MAPe,aAOf,QAPe,aAOf;AAAA,MAPe,YAOf,QAPe,YAOf;AAAA,MAPe,QAOf,QAPe,QAOf;AAAA,MAPe,aAOf,QAPe,aAOf;AAAA,MADLA,IACK;;AAAA,8BACmCE,kCAAoB,oBAApBA,EAM3B;AACdC,IAAAA,gBADc,EACdA,gBADc;AAEdC,IAAAA,aAFc,EAEdA,aAFc;AAGdC,IAAAA,YAHc,EAGdA,YAHc;AAIdC,IAAAA,QAJc,EAIdA,QAJc;AAKdC,IAAAA,aAAAA,EAAAA;AALc,GAN2BL,CADnC;AAAA,MACF,KADE,yBACF,KADE;AAAA,MACF,WADE,yBACF,WADE;AAAA,MACoBD,UADpB,yBACoBA,UADpB;;AAeR,SACE,KAAA,CAAA,aAAA,CAAA,mBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAFP,KAAA;AAGE,IAAA,WAAW,EAHb,WAAA;AAIE,IAAA,UAAU,EAAEA;AAJd,GAAA,CAAA,CADF;AAQD;;eAEcO,oCAAf,eAAeA,C","sourcesContent":["import * as React from 'react';\nimport {\n  createNavigatorFactory,\n  useNavigationBuilder,\n  DefaultNavigatorOptions,\n  DrawerNavigationState,\n  DrawerRouterOptions,\n  DrawerRouter,\n  DrawerActionHelpers,\n  ParamListBase,\n} from '@react-navigation/native';\n\nimport DrawerView from '../views/DrawerView';\nimport type {\n  DrawerNavigationOptions,\n  DrawerNavigationConfig,\n  DrawerNavigationEventMap,\n} from '../types';\n\ntype Props = DefaultNavigatorOptions<DrawerNavigationOptions> &\n  DrawerRouterOptions &\n  DrawerNavigationConfig;\n\nfunction DrawerNavigator({\n  initialRouteName,\n  openByDefault,\n  backBehavior,\n  children,\n  screenOptions,\n  ...rest\n}: Props) {\n  const { state, descriptors, navigation } = useNavigationBuilder<\n    DrawerNavigationState<ParamListBase>,\n    DrawerRouterOptions,\n    DrawerActionHelpers<ParamListBase>,\n    DrawerNavigationOptions,\n    DrawerNavigationEventMap\n  >(DrawerRouter, {\n    initialRouteName,\n    openByDefault,\n    backBehavior,\n    children,\n    screenOptions,\n  });\n\n  return (\n    <DrawerView\n      {...rest}\n      state={state}\n      descriptors={descriptors}\n      navigation={navigation}\n    />\n  );\n}\n\nexport default createNavigatorFactory<\n  DrawerNavigationState<ParamListBase>,\n  DrawerNavigationOptions,\n  DrawerNavigationEventMap,\n  typeof DrawerNavigator\n>(DrawerNavigator);\n"]},"metadata":{},"sourceType":"script"}