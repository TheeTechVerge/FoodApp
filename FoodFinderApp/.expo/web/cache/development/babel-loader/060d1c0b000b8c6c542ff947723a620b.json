{"ast":null,"code":"'use strict';\n\nvar m;\n\ntry {\n  m = require('react-native/Libraries/Components/UnimplementedViews/UnimplementedView');\n} catch (_unused) {\n  m = {};\n}\n\nmodule.exports = m;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Lab/ReactNative/FoodApp/FoodFinderApp/node_modules/@react-native-community/toolbar-android/js/ToolbarAndroid.web.js"],"names":["m","require","module","exports"],"mappings":"AASA;;AAEA,IAAIA,CAAJ;;AACA,IAAI;AAEFA,EAAAA,CAAC,GAAGC,OAAO,CAAC,wEAAD,CAAX;AACD,CAHD,CAGE,gBAAM;AAIND,EAAAA,CAAC,GAAG,EAAJ;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBH,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nlet m;\ntry {\n  // This is an optional dependency. However, webpack might still show warning message.\n  m = require('react-native/Libraries/Components/UnimplementedViews/UnimplementedView');\n} catch {\n  // If failed to find react-native UnimplementedView, just returns an empty module so\n  // this won't cause bundling related error, however any subsequent attempt of using this module\n  // in such situation shall caused compile-error because it really should not be used for web.\n  m = {};\n}\n\nmodule.exports = m;\n"]},"metadata":{},"sourceType":"script"}