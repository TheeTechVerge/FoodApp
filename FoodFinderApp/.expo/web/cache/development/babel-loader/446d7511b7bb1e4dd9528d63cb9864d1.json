{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSafeAreaView = _interopRequireDefault(require(\"react-native-safe-area-view\"));\n\nvar _Surface = _interopRequireDefault(require(\"./Surface\"));\n\nvar _theming = require(\"../core/theming\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DEFAULT_DURATION = 220;\n\nvar Modal = function (_React$Component) {\n  (0, _inherits2.default)(Modal, _React$Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"state\", {\n      opacity: new _reactNative.Animated.Value(_this.props.visible ? 1 : 0),\n      rendered: _this.props.visible\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleBack\", function () {\n      if (_this.props.dismissable) {\n        _this.hideModal();\n      }\n\n      return true;\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"showModal\", function () {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', _this.handleBack);\n\n      _reactNative.BackHandler.addEventListener('hardwareBackPress', _this.handleBack);\n\n      var opacity = _this.state.opacity;\n      var scale = _this.props.theme.animation.scale;\n\n      _reactNative.Animated.timing(opacity, {\n        toValue: 1,\n        duration: scale * DEFAULT_DURATION,\n        easing: _reactNative.Easing.out(_reactNative.Easing.cubic),\n        useNativeDriver: true\n      }).start();\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"hideModal\", function () {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', _this.handleBack);\n\n      var opacity = _this.state.opacity;\n      var scale = _this.props.theme.animation.scale;\n\n      _reactNative.Animated.timing(opacity, {\n        toValue: 0,\n        duration: scale * DEFAULT_DURATION,\n        easing: _reactNative.Easing.out(_reactNative.Easing.cubic),\n        useNativeDriver: true\n      }).start(function (_ref) {\n        var finished = _ref.finished;\n\n        if (!finished) {\n          return;\n        }\n\n        if (_this.props.visible && _this.props.onDismiss) {\n          _this.props.onDismiss();\n        }\n\n        if (_this.props.visible) {\n          _this.showModal();\n        } else {\n          _this.setState({\n            rendered: false\n          });\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Modal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        if (this.props.visible) {\n          this.showModal();\n        } else {\n          this.hideModal();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          opacity = _this$state.opacity;\n      if (!rendered) return null;\n      var _this$props = this.props,\n          children = _this$props.children,\n          dismissable = _this$props.dismissable,\n          theme = _this$props.theme,\n          contentContainerStyle = _this$props.contentContainerStyle;\n      var colors = theme.colors;\n      return React.createElement(_reactNative.Animated.View, {\n        pointerEvents: this.props.visible ? 'auto' : 'none',\n        accessibilityViewIsModal: true,\n        accessibilityLiveRegion: \"polite\",\n        style: _reactNative.StyleSheet.absoluteFill\n      }, React.createElement(_reactNative.TouchableWithoutFeedback, {\n        disabled: !dismissable,\n        onPress: dismissable ? this.hideModal : undefined\n      }, React.createElement(_reactNative.Animated.View, {\n        style: [styles.backdrop, {\n          backgroundColor: colors.backdrop,\n          opacity: opacity\n        }]\n      })), React.createElement(_reactNativeSafeAreaView.default, {\n        style: styles.wrapper,\n        pointerEvents: \"box-none\"\n      }, React.createElement(_Surface.default, {\n        style: [{\n          opacity: opacity\n        }, styles.content, contentContainerStyle]\n      }, children)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return Modal;\n}(React.Component);\n\n_defineProperty(Modal, \"defaultProps\", {\n  dismissable: true,\n  visible: false\n});\n\nvar _default = (0, _theming.withTheme)(Modal);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["Modal.tsx"],"names":["DEFAULT_DURATION","Modal","React","dismissable","visible","nextProps","prevState","rendered","opacity","Animated","prevProps","BackHandler","scale","toValue","duration","easing","Easing","useNativeDriver","finished","contentContainerStyle","colors","StyleSheet","absoluteFill","undefined","styles","backgroundColor","withTheme","backdrop","flex","wrapper","justifyContent","content"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  BackHandler,\n  Easing,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  ViewStyle,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Determines whether clicking outside the modal dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => void;\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  opacity: Animated.Value;\n  rendered: boolean;\n};\n\nconst DEFAULT_DURATION = 220;\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/modal.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showModal = () => setVisible(true);\n *\n *   const hideModal = () => setVisible(false);\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <Modal visible={visible} onDismiss={hideModal}>\n *           <Text>Example Modal</Text>\n *         </Modal>\n *         <Button style={{marginTop: 30}} onPress={showModal}>\n *           Show\n *         </Button>\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nclass Modal extends React.Component<Props, State> {\n  static defaultProps = {\n    dismissable: true,\n    visible: false,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return {\n        rendered: true,\n      };\n    }\n\n    return null;\n  }\n\n  state = {\n    opacity: new Animated.Value(this.props.visible ? 1 : 0),\n    rendered: this.props.visible,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      if (this.props.visible) {\n        this.showModal();\n      } else {\n        this.hideModal();\n      }\n    }\n  }\n\n  private handleBack = () => {\n    if (this.props.dismissable) {\n      this.hideModal();\n    }\n    return true;\n  };\n\n  private showModal = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\n    BackHandler.addEventListener('hardwareBackPress', this.handleBack);\n\n    const { opacity } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  private hideModal = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\n\n    const { opacity } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n\n      if (this.props.visible && this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n\n      if (this.props.visible) {\n        this.showModal();\n      } else {\n        this.setState({\n          rendered: false,\n        });\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\n  }\n\n  render() {\n    const { rendered, opacity } = this.state;\n\n    if (!rendered) return null;\n\n    const { children, dismissable, theme, contentContainerStyle } = this.props;\n    const { colors } = theme;\n    return (\n      <Animated.View\n        pointerEvents={this.props.visible ? 'auto' : 'none'}\n        accessibilityViewIsModal\n        accessibilityLiveRegion=\"polite\"\n        style={StyleSheet.absoluteFill}\n      >\n        <TouchableWithoutFeedback\n          disabled={!dismissable}\n          onPress={dismissable ? this.hideModal : undefined}\n        >\n          <Animated.View\n            style={[\n              styles.backdrop,\n              { backgroundColor: colors.backdrop, opacity },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <SafeAreaView style={styles.wrapper} pointerEvents=\"box-none\">\n          <Surface\n            style={\n              [{ opacity }, styles.content, contentContainerStyle] as StyleProp<\n                ViewStyle\n              >\n            }\n          >\n            {children}\n          </Surface>\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nexport default withTheme(Modal);\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}