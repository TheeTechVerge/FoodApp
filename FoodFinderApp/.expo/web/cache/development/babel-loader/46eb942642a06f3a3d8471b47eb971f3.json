{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _RadioButtonGroup = _interopRequireDefault(require(\"./RadioButtonGroup\"));\n\nvar _RadioButtonAndroid = _interopRequireDefault(require(\"./RadioButtonAndroid\"));\n\nvar _RadioButtonIOS = _interopRequireDefault(require(\"./RadioButtonIOS\"));\n\nvar _RadioButtonItem = _interopRequireDefault(require(\"./RadioButtonItem\"));\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar RadioButton = function (_React$Component) {\n  (0, _inherits2.default)(RadioButton, _React$Component);\n\n  var _super = _createSuper(RadioButton);\n\n  function RadioButton() {\n    (0, _classCallCheck2.default)(this, RadioButton);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(RadioButton, [{\n    key: \"render\",\n    value: function render() {\n      var Button = _reactNative.Platform.select({\n        default: _RadioButtonAndroid.default,\n        ios: _RadioButtonIOS.default\n      });\n\n      return React.createElement(Button, this.props);\n    }\n  }]);\n  return RadioButton;\n}(React.Component);\n\n_defineProperty(RadioButton, \"Group\", _RadioButtonGroup.default);\n\n_defineProperty(RadioButton, \"Android\", _RadioButtonAndroid.default);\n\n_defineProperty(RadioButton, \"IOS\", _RadioButtonIOS.default);\n\n_defineProperty(RadioButton, \"Item\", _RadioButtonItem.default);\n\nvar _default = (0, _theming.withTheme)(RadioButton);\n\nexports.default = _default;","map":{"version":3,"sources":["RadioButton.tsx"],"names":["RadioButton","React","RadioButtonGroup","RadioButtonAndroid","RadioButtonIOS","RadioButtonItem","Button","default","ios","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;IAoFA,W;;;;;;;;;;;;6BAaW;AACP,UAAMM,MAAM,GAAG,sBAAA,MAAA,CAAgB;AAC7BC,QAAAA,OAAO,EADsB,2BAAA;AAE7BC,QAAAA,GAAG,EAAEJ;AAFwB,OAAhB,CAAf;;AAKA,aAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAY,KAAnB,KAAO,CAAP;AACD;;;EApBuBH,KAAK,CAA/B,S;;gBAAMD,W,WAEWE,yB;;gBAFXF,W,aAKaG,2B;;gBALbH,W,SAQSI,uB;;gBARTJ,W,UAWUK,wB;;eAYDI,wBAAf,WAAeA,C","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup from './RadioButtonGroup';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport RadioButtonItem from './RadioButtonItem';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\nexport type Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState('first');\n *\n *   return (\n *     <View>\n *       <RadioButton\n *         value=\"first\"\n *         status={ checked === 'first' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('first')}\n *       />\n *       <RadioButton\n *         value=\"second\"\n *         status={ checked === 'second' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('second')}\n *       />\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass RadioButton extends React.Component<Props> {\n  // @component ./RadioButtonGroup.tsx\n  static Group = RadioButtonGroup;\n\n  // @component ./RadioButtonAndroid.tsx\n  static Android = RadioButtonAndroid;\n\n  // @component ./RadioButtonIOS.tsx\n  static IOS = RadioButtonIOS;\n\n  // @component ./RadioButtonItem.tsx\n  static Item = RadioButtonItem;\n\n  render() {\n    const Button = Platform.select({\n      default: RadioButtonAndroid,\n      ios: RadioButtonIOS,\n    });\n\n    return <Button {...this.props} />;\n  }\n}\n\nexport default withTheme(RadioButton);\n"]},"metadata":{},"sourceType":"script"}