{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIsDrawerOpen;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DrawerOpenContext = _interopRequireDefault(require(\"./DrawerOpenContext\"));\n\nfunction useIsDrawerOpen() {\n  var isDrawerOpen = React.useContext(_DrawerOpenContext.default);\n\n  if (typeof isDrawerOpen !== 'boolean') {\n    throw new Error(\"Couldn't find a drawer. Is your component inside a drawer navigator?\");\n  }\n\n  return isDrawerOpen;\n}","map":{"version":3,"sources":["useIsDrawerOpen.tsx"],"names":["isDrawerOpen","React"],"mappings":";;;;;;;;;AAAA;;AACA;;AAKe,SAAA,eAAA,GAA2B;AACxC,MAAMA,YAAY,GAAGC,KAAK,CAALA,UAAAA,CAArB,0BAAqBA,CAArB;;AAEA,MAAI,OAAA,YAAA,KAAJ,SAAA,EAAuC;AACrC,UAAM,IAAA,KAAA,CAAN,sEAAM,CAAN;AAGD;;AAED,SAAA,YAAA;AACD","sourcesContent":["import * as React from 'react';\nimport DrawerOpenContext from './DrawerOpenContext';\n\n/**\n * Hook to detect if the drawer is open in a parent navigator.\n */\nexport default function useIsDrawerOpen() {\n  const isDrawerOpen = React.useContext(DrawerOpenContext);\n\n  if (typeof isDrawerOpen !== 'boolean') {\n    throw new Error(\n      \"Couldn't find a drawer. Is your component inside a drawer navigator?\"\n    );\n  }\n\n  return isDrawerOpen;\n}\n"]},"metadata":{},"sourceType":"script"}